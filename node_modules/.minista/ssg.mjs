import { jsx, jsxs, Fragment } from "react/jsx-runtime";
import "dayjs";
import "dayjs/plugin/timezone.js";
import "dayjs/plugin/utc.js";
import { Helmet, HelmetProvider } from "react-helmet-async";
import { createElement } from "react";
import classNames from "classnames";
import path from "node:path";
import { parse } from "node-html-parser";
import { renderToString } from "react-dom/server";
import { StaticRouter } from "react-router-dom/server.js";
import { Routes, Route } from "react-router-dom";
import picomatch from "picomatch";
const index$1 = "";
const fonts = "";
const variables = "";
const utils = "";
const globals = "";
function Head(props) {
  const { children, ...attribute } = props;
  return /* @__PURE__ */ jsx(Helmet, { ...attribute, children });
}
function Icon$2({
  iconId,
  srcDir = "",
  className,
  title,
  ...attributes
}) {
  return /* @__PURE__ */ jsxs("svg", { className: className && className, ...attributes, children: [
    title && /* @__PURE__ */ jsx("title", { children: title }),
    /* @__PURE__ */ jsx(
      "use",
      {
        href: "",
        "data-minista-transform-target": "icon",
        "data-minista-icon-iconid": iconId,
        "data-minista-icon-srcdir": srcDir
      }
    )
  ] });
}
const autoSize = "__minista_image_auto_size";
function resolveAspect(aspect) {
  const regex = /^\d+\.?\d*:\d+\.?\d*$/;
  const isAspect = regex.test(aspect);
  if (isAspect) {
    return aspect;
  }
}
function resolveTarget(src) {
  const regex = /^https?:\/\//i;
  const isRemote = regex.test(src);
  if (isRemote) {
    return "remote";
  } else {
    return "image";
  }
}
function Image({
  src,
  outName = "",
  sizes = autoSize,
  width = autoSize,
  height = autoSize,
  alt = "",
  decoding = "async",
  loading = "lazy",
  layout,
  breakpoints,
  resolution,
  format,
  formatOptions,
  quality,
  aspect,
  background,
  fit,
  position,
  ...attributes
}) {
  const optimizeObj = {
    layout,
    breakpoints,
    resolution,
    format,
    formatOptions,
    quality,
    aspect: aspect ? resolveAspect(aspect) : void 0,
    background,
    fit,
    position
  };
  const optimizeStr = JSON.stringify(optimizeObj);
  return /* @__PURE__ */ jsx(
    "img",
    {
      srcSet: "",
      src: "",
      sizes,
      width,
      height,
      alt,
      decoding,
      loading,
      "data-minista-transform-target": resolveTarget(src),
      "data-minista-image-src": src,
      "data-minista-image-outname": outName,
      "data-minista-image-optimize": optimizeStr,
      ...attributes
    }
  );
}
const Header$1 = "";
const Logo$1 = "";
const logoImgSrc = "/assets/images/logo.svg";
const Logo = (props) => {
  const {
    className,
    loading = "lazy"
  } = props;
  const title = "Home";
  return /* @__PURE__ */ jsx(
    "a",
    {
      className: classNames(className, "logo"),
      href: "/",
      title,
      "aria-label": title,
      children: /* @__PURE__ */ jsx(
        "img",
        {
          className: "logo__image",
          src: logoImgSrc,
          alt: "",
          width: 199,
          height: 60,
          loading
        }
      )
    }
  );
};
const Button$1 = "";
const Icon$1 = "";
const Icon = (props) => {
  const {
    className,
    name,
    hasFill = false,
    ariaLabel
  } = props;
  return /* @__PURE__ */ jsx(
    "span",
    {
      className: classNames(className, "icon"),
      "aria-label": ariaLabel,
      children: /* @__PURE__ */ jsx(
        Icon$2,
        {
          iconId: name,
          fill: hasFill ? "currentColor" : "none",
          stroke: hasFill ? "none" : "currentColor"
        }
      )
    }
  );
};
const Button = (props) => {
  const {
    className,
    type = "button",
    href,
    target,
    /**
     * '' (default) | 'transparent' | 'black-10' | 'black-08' | 'black-06'
     */
    mode = "",
    label,
    isLabelHidden = false,
    iconName,
    /**
     * 'before' | 'after'
     */
    iconPosition = "before",
    hasFillIcon,
    extraAttrs
  } = props;
  const isLink = href !== void 0;
  const Component = isLink ? "a" : "button";
  const linkProps = { href, target };
  const buttonProps = { type };
  const specificProps = isLink ? linkProps : buttonProps;
  const title = isLabelHidden ? label : void 0;
  const iconComponent = iconName && /* @__PURE__ */ jsx(
    Icon,
    {
      className: "button__icon",
      name: iconName,
      hasFill: hasFillIcon
    }
  );
  return /* @__PURE__ */ jsxs(
    Component,
    {
      className: classNames(className, "button", {
        [`button--${mode}`]: mode
      }),
      title,
      "aria-label": title,
      ...specificProps,
      ...extraAttrs,
      children: [
        iconPosition === "before" && iconComponent,
        !isLabelHidden && /* @__PURE__ */ jsx("span", { className: "button__label", children: label }),
        iconPosition === "after" && iconComponent
      ]
    }
  );
};
const BurgerButton$1 = "";
const BurgerButton = (props) => {
  const {
    className,
    extraAttrs
  } = props;
  const title = "Open menu";
  return /* @__PURE__ */ jsx(
    "button",
    {
      className: classNames(className, "burger-button"),
      type: "button",
      "aria-label": title,
      title,
      ...extraAttrs,
      children: /* @__PURE__ */ jsxs("svg", { className: "burger-button__svg", width: "30", height: "30", viewBox: "0 0 100 100", children: [
        /* @__PURE__ */ jsx(
          "path",
          {
            className: "burger-button__line burger-button__line--1",
            d: "M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            className: "burger-button__line burger-button__line--2",
            d: "M 20,50 H 80"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            className: "burger-button__line burger-button__line--3",
            d: "M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942"
          }
        )
      ] })
    }
  );
};
const Header = (props) => {
  const {
    url,
    isFixed
  } = props;
  const menuItems = [
    {
      label: "Home",
      href: "/"
    },
    {
      label: "Movies & Shows",
      href: "/movies"
    },
    {
      label: "Support",
      href: "/support"
    },
    {
      label: "Subscriptions",
      href: "/subscriptions"
    }
  ];
  return /* @__PURE__ */ jsx(
    "header",
    {
      className: classNames("header", {
        "is-fixed": isFixed
      }),
      "data-js-overlay-menu": "",
      children: /* @__PURE__ */ jsxs("div", { className: "header__inner container", children: [
        /* @__PURE__ */ jsx(
          Logo,
          {
            className: "header__logo",
            loading: "eager"
          }
        ),
        /* @__PURE__ */ jsxs(
          "dialog",
          {
            className: "header__overlay-menu-dialog",
            "data-js-overlay-menu-dialog": "",
            children: [
              /* @__PURE__ */ jsx("nav", { className: "header__menu", children: /* @__PURE__ */ jsx("ul", { className: "header__menu-list", children: menuItems.map(({ label, href }, index2) => /* @__PURE__ */ jsx("li", { className: "header__menu-item", children: /* @__PURE__ */ jsx(
                "a",
                {
                  className: classNames("header__menu-link", {
                    "is-active": href === url
                  }),
                  href,
                  children: label
                }
              ) }, index2)) }) }),
              /* @__PURE__ */ jsxs("div", { className: "header__actions", children: [
                /* @__PURE__ */ jsx(
                  Button,
                  {
                    className: "header__button",
                    label: "Search",
                    isLabelHidden: true,
                    mode: "transparent",
                    iconName: "search"
                  }
                ),
                /* @__PURE__ */ jsx(
                  Button,
                  {
                    className: "header__button",
                    label: "Notifications",
                    isLabelHidden: true,
                    mode: "transparent",
                    iconName: "notification"
                  }
                )
              ] })
            ]
          }
        ),
        /* @__PURE__ */ jsx(
          BurgerButton,
          {
            className: "header__burger-button visible-tablet",
            extraAttrs: {
              "data-js-overlay-menu-burger-button": ""
            }
          }
        )
      ] })
    }
  );
};
const Content$1 = "";
const Content = (props) => {
  const {
    children,
    isResetPaddingTop = false
  } = props;
  return /* @__PURE__ */ jsx(
    "main",
    {
      className: classNames("content", {
        "content--reset-padding-top": isResetPaddingTop
      }),
      children
    }
  );
};
const Footer$1 = "";
const Socials$1 = "";
const Socials = (props) => {
  const {
    className,
    links = []
  } = props;
  return /* @__PURE__ */ jsx(
    "div",
    {
      className: classNames(className, "soc1als"),
      children: /* @__PURE__ */ jsx("ul", { className: "soc1als__list", children: links.map(({ label, iconName }, index2) => /* @__PURE__ */ jsx("li", { className: "soc1als__item", children: /* @__PURE__ */ jsx(
        Button,
        {
          className: "soc1als__link",
          mode: "black-10",
          href: "/",
          target: "_blank",
          label,
          isLabelHidden: true,
          iconName,
          hasFillIcon: true
        }
      ) }, index2)) })
    }
  );
};
const Footer = () => {
  const menuItems = [
    {
      title: "Home",
      links: ["Categories", "Devices", "Pricing", "FAQ"]
    },
    {
      title: "Movies",
      links: ["Gernes", "Trending", "New Release", "Popular"]
    },
    {
      title: "Popular",
      links: ["Gernes", "Trending", "New Release", "Popular"]
    },
    {
      title: "Support",
      links: ["Contact Us"]
    },
    {
      title: "Subscription",
      links: ["Plans", "Features"]
    },
    {
      title: "Connect With Us",
      socialLinks: [
        {
          label: "Facebook",
          iconName: "facebook"
        },
        {
          label: "Twitter",
          iconName: "twitter"
        },
        {
          label: "LinkedIn",
          iconName: "linked-in"
        }
      ]
    }
  ];
  const extraLinks = ["Terms of Use", "Privacy Policy", "Cookie Policy"];
  return /* @__PURE__ */ jsx("footer", { className: "footer", children: /* @__PURE__ */ jsxs("div", { className: "footer__inner container", children: [
    /* @__PURE__ */ jsx("nav", { className: "footer__menu", children: menuItems.map(({ title, links, socialLinks }, index2) => /* @__PURE__ */ jsxs("div", { className: "footer__menu-column", children: [
      /* @__PURE__ */ jsx("a", { className: "footer__menu-title h6", href: "/", children: title }),
      (links == null ? void 0 : links.length) > 0 && /* @__PURE__ */ jsx("ul", { className: "footer__menu-list", children: links.map((link, index22) => /* @__PURE__ */ jsx("li", { className: "footer__menu-item", children: /* @__PURE__ */ jsx("a", { className: "footer__menu-link", href: "/", children: link }) }, index22)) }),
      (socialLinks == null ? void 0 : socialLinks.length) > 0 && /* @__PURE__ */ jsx(Socials, { className: "footer__soc1als", links: socialLinks })
    ] }, index2)) }),
    /* @__PURE__ */ jsxs("div", { className: "footer__extra", children: [
      /* @__PURE__ */ jsxs("p", { className: "footer__copyright", children: [
        "@",
        /* @__PURE__ */ jsx("time", { dateTime: "2023", children: "2023" }),
        " streamvib, All Rights Reserved"
      ] }),
      /* @__PURE__ */ jsx("div", { className: "footer__extra-links", children: extraLinks.map((link, index2) => /* @__PURE__ */ jsx("a", { className: "footer__extra-link", href: "/", children: link }, index2)) })
    ] })
  ] }) });
};
const Banner$1 = "";
const Banner = () => {
  const titleId = "banner-title";
  return /* @__PURE__ */ jsx(
    "section",
    {
      className: "banner container",
      "aria-labelledby": titleId,
      children: /* @__PURE__ */ jsxs("div", { className: "banner__inner", children: [
        /* @__PURE__ */ jsxs("div", { className: "banner__body", children: [
          /* @__PURE__ */ jsx("h2", { className: "banner__title", id: titleId, children: "Start your free trial today!" }),
          /* @__PURE__ */ jsx("div", { className: "banner__description", children: /* @__PURE__ */ jsx("p", { children: "This is a clear and concise call to action that encourages users to sign up for a free trial of StreamVibe." }) })
        ] }),
        /* @__PURE__ */ jsx(
          Button,
          {
            className: "banner__button",
            label: "Start a Free Trail",
            href: "/subscriptions"
          }
        )
      ] })
    }
  );
};
const appleTouchIcon = "/assets/images/apple-touch-icon.png";
const favicon32 = "/assets/images/favicon-32x32.png";
const favicon16 = "/assets/images/favicon-16x16.png";
const manifest = "/assets/site.webmanifest";
const global = (props) => {
  const {
    children,
    title,
    url,
    isHeaderFixed
  } = props;
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsxs(Head, { htmlAttributes: { lang: "en" }, children: [
      /* @__PURE__ */ jsxs("title", { children: [
        "Stream Vibe | ",
        title
      ] }),
      /* @__PURE__ */ jsx("script", { src: "/src/main.js", type: "module" }),
      /* @__PURE__ */ jsx("link", { rel: "apple-touch-icon", sizes: "180x180", href: appleTouchIcon }),
      /* @__PURE__ */ jsx("link", { rel: "icon", type: "image/png", sizes: "32x32", href: favicon32 }),
      /* @__PURE__ */ jsx("link", { rel: "icon", type: "image/png", sizes: "16x16", href: favicon16 }),
      /* @__PURE__ */ jsx("link", { rel: "manifest", href: manifest })
    ] }),
    /* @__PURE__ */ jsx(Header, { url, isFixed: isHeaderFixed }),
    /* @__PURE__ */ jsxs(Content, { isResetPaddingTop: isHeaderFixed, children: [
      children,
      /* @__PURE__ */ jsx(Banner, {})
    ] }),
    /* @__PURE__ */ jsx(Footer, {})
  ] });
};
const __vite_glob_0_0$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: global
}, Symbol.toStringTag, { value: "Module" }));
function getGlobal() {
  const GLOBALS = /* @__PURE__ */ Object.assign({
    "/src/global.jsx": __vite_glob_0_0$1
  });
  const globals2 = Object.keys(GLOBALS).length === 0 ? [{}] : Object.keys(GLOBALS).map((global22) => {
    return {
      component: GLOBALS[global22].default || void 0,
      getStaticData: GLOBALS[global22].getStaticData || void 0,
      metadata: GLOBALS[global22].metadata || {}
    };
  });
  const global2 = globals2[0];
  return global2;
}
async function resolveGlobal(global2) {
  let staticData = global2.getStaticData ? await global2.getStaticData() : { props: {} };
  if (Array.isArray(staticData)) {
    staticData = staticData[0];
  }
  const resolvedGlobal = {
    component: global2.component || void 0,
    staticData,
    metadata: { ...global2.metadata || {} }
  };
  return resolvedGlobal;
}
const Hero$1 = "";
const playImgSrc = "/assets/images/play.svg";
const Hero = () => {
  const titleId = "hero-title";
  const playButtonTitle = "Play Video";
  return /* @__PURE__ */ jsxs("section", { className: "hero", "aria-labelledby": titleId, children: [
    /* @__PURE__ */ jsx("div", { className: "hero__pano", children: /* @__PURE__ */ jsx("div", { className: "hero__pano-inner container", children: /* @__PURE__ */ jsx(
      "button",
      {
        className: "hero__play-button",
        type: "button",
        "aria-label": playButtonTitle,
        title: playButtonTitle,
        children: /* @__PURE__ */ jsx(
          "img",
          {
            className: "hero__play-button-image",
            alt: "",
            src: playImgSrc,
            width: 470,
            height: 470
          }
        )
      }
    ) }) }),
    /* @__PURE__ */ jsx("div", { className: "hero__body", children: /* @__PURE__ */ jsxs("div", { className: "hero__body-inner container", children: [
      /* @__PURE__ */ jsx("h1", { className: "hero__title", id: titleId, children: "The Best Streaming Experience" }),
      /* @__PURE__ */ jsx("div", { className: "hero__description", children: /* @__PURE__ */ jsx("p", { children: "StreamVibe is the best streaming experience for watching your favorite movies and shows on demand, anytime, anywhere. With StreamVibe, you can enjoy a wide variety of content, including the latest blockbusters, classic movies, popular TV shows, and more. You can also create your own watchlists, so you can easily find the content you want to watch." }) }),
      /* @__PURE__ */ jsx(
        Button,
        {
          className: "hero__button",
          iconName: "play",
          hasFillIcon: true,
          label: "Start Watching Now"
        }
      )
    ] }) })
  ] });
};
const Section$1 = "";
const Section = (props) => {
  const {
    className,
    title,
    titleId,
    description,
    actions,
    isActionsHiddenOnMobile = false,
    children
  } = props;
  return /* @__PURE__ */ jsxs(
    "section",
    {
      className: classNames(className, "section container"),
      "aria-labelledby": titleId,
      children: [
        /* @__PURE__ */ jsxs("header", { className: "section__header", children: [
          /* @__PURE__ */ jsxs("div", { className: "section__info", children: [
            /* @__PURE__ */ jsx("h2", { className: "section__title h3", id: titleId, children: title }),
            description && /* @__PURE__ */ jsx("div", { className: "section__description", children: /* @__PURE__ */ jsx("p", { children: description }) })
          ] }),
          actions && /* @__PURE__ */ jsx(
            "div",
            {
              className: classNames("section__actions", {
                "hidden-mobile": isActionsHiddenOnMobile
              }),
              children: actions
            }
          )
        ] }),
        /* @__PURE__ */ jsx("div", { className: "section__body", children })
      ]
    }
  );
};
const CategoryCard$1 = "";
const Badge$1 = "";
const Badge = (props) => {
  const {
    className,
    /**
     * '' (default) | 'accent'
     */
    mode = "",
    isBig = false,
    children,
    iconName,
    hasFillIcon,
    iconAriaLabel
  } = props;
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: classNames(className, "badge", {
        [`badge--${mode}`]: mode,
        "badge--big": isBig
      }),
      children: [
        iconName && /* @__PURE__ */ jsx(
          Icon,
          {
            className: "badge__icon",
            name: iconName,
            hasFill: hasFillIcon,
            ariaLabel: iconAriaLabel
          }
        ),
        /* @__PURE__ */ jsx("span", { children })
      ]
    }
  );
};
const CategoryCard = (props) => {
  const {
    title,
    images = [],
    badge
  } = props;
  return /* @__PURE__ */ jsxs("a", { className: "category-card", href: "/movies", children: [
    /* @__PURE__ */ jsx("div", { className: "category-card__images", children: images.map((imgSrc, index2) => /* @__PURE__ */ jsx(
      Image,
      {
        className: "category-card__image",
        src: imgSrc
      },
      index2
    )) }),
    /* @__PURE__ */ jsxs("div", { className: "category-card__body", children: [
      /* @__PURE__ */ jsxs("h3", { className: "category-card__title", children: [
        badge && /* @__PURE__ */ jsx(
          Badge,
          {
            className: "category-card__badge",
            mode: "accent",
            isBig: true,
            children: badge
          }
        ),
        /* @__PURE__ */ jsx("span", { children: title })
      ] }),
      /* @__PURE__ */ jsx(
        Icon,
        {
          className: "category-card__icon",
          name: "arrow-right"
        }
      )
    ] })
  ] });
};
const swiper = "";
const Slider$1 = "";
const SliderNavigation$1 = "";
const SliderNavigation = (props) => {
  const {
    className,
    id,
    hasPagination = true,
    /**
     * '' (default) | 'tile' | 'rounded'
     */
    mode = "",
    /**
     * '' (default) | 'abs-bottom'
     */
    position = "",
    /**
     * '' (default) | 'space-between'
     */
    justifyContent = "",
    isHiddenMobile,
    buttonMode = "black-10"
  } = props;
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: classNames(className, "slider-navigation", {
        [`slider-navigation--${mode}`]: mode,
        [`slider-navigation--${position}`]: position,
        [`slider-navigation--${justifyContent}`]: justifyContent,
        "hidden-mobile": isHiddenMobile
      }),
      id,
      "data-js-slider-navigation": "",
      children: [
        /* @__PURE__ */ jsx(
          Button,
          {
            className: "slider-navigation__arrow-button slider-navigation__arrow-button--previous",
            mode: buttonMode,
            iconName: "arrow-left",
            label: "Previous slide",
            isLabelHidden: true,
            extraAttrs: {
              "data-js-slider-previous-button": ""
            }
          }
        ),
        hasPagination && /* @__PURE__ */ jsx(
          "div",
          {
            className: "slider-navigation__pagination",
            "data-js-slider-pagination": ""
          }
        ),
        /* @__PURE__ */ jsx(
          Button,
          {
            className: "slider-navigation__arrow-button slider-navigation__arrow-button--next",
            mode: buttonMode,
            iconName: "arrow-right",
            label: "Next slide",
            isLabelHidden: true,
            extraAttrs: {
              "data-js-slider-next-button": ""
            }
          }
        )
      ]
    }
  );
};
const defaultSliderParams = {
  // От 0 и до следующего брекпоинта
  slidesPerView: 2,
  slidesPerGroup: 1,
  spaceBetween: 20,
  allowTouchMove: true,
  // Следующий брекпоинт
  breakpoints: {
    481: {
      slidesPerView: 3,
      slidesPerGroup: 3,
      spaceBetween: 20,
      allowTouchMove: true
    },
    768: {
      slidesPerView: 4,
      slidesPerGroup: 4,
      spaceBetween: 20,
      allowTouchMove: true
    },
    1024: {
      slidesPerView: 5,
      slidesPerGroup: 5,
      spaceBetween: 20,
      allowTouchMove: false
    },
    1441: {
      slidesPerView: 5,
      slidesPerGroup: 5,
      spaceBetween: 30,
      allowTouchMove: false
    }
  }
};
const Slider = (props) => {
  const {
    children,
    navigationTargetElementId = null,
    sliderParams = defaultSliderParams,
    isBeyondTheViewportOnMobileS,
    hasScrollbarOnMobile = true,
    /**
     * '' (default) | 'abs-bottom'
     */
    navigationPosition = "",
    navigationMode,
    navigationJustifyContent,
    isNavigationHiddenMobile = true
  } = props;
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: classNames("slider", {
        "slider--beyond-the-viewport-on-mobile-s": isBeyondTheViewportOnMobileS
      }),
      "data-js-slider": JSON.stringify({
        sliderParams,
        navigationTargetElementId
      }),
      children: [
        /* @__PURE__ */ jsx("div", { className: "slider__swiper swiper", "data-js-slider-swiper": "", children: /* @__PURE__ */ jsx("ul", { className: "slider__list swiper-wrapper", children: children.map((slide, index2) => /* @__PURE__ */ jsx("li", { className: "slider__item swiper-slide", children: slide }, index2)) }) }),
        !navigationTargetElementId && /* @__PURE__ */ jsx(
          SliderNavigation,
          {
            className: "slider__navigation",
            mode: navigationMode,
            position: navigationPosition,
            justifyContent: navigationJustifyContent,
            isHiddenMobile: isNavigationHiddenMobile
          }
        ),
        hasScrollbarOnMobile && /* @__PURE__ */ jsx(
          "div",
          {
            className: "slider__scrollbar visible-mobile",
            "data-js-slider-scrollbar": ""
          }
        )
      ]
    }
  );
};
const categoryItems = [
  {
    title: "Action",
    images: [
      "/src/assets/images/categories/action/action_1.jpg",
      "/src/assets/images/categories/action/action_2.jpg",
      "/src/assets/images/categories/action/action_3.jpg",
      "/src/assets/images/categories/action/action_4.jpg"
    ]
  },
  {
    title: "Adventure",
    images: [
      "/src/assets/images/categories/adventure/adventure_1.jpg",
      "/src/assets/images/categories/adventure/adventure_2.jpg",
      "/src/assets/images/categories/adventure/adventure_3.jpg",
      "/src/assets/images/categories/adventure/adventure_4.jpg"
    ]
  },
  {
    title: "Comedy",
    images: [
      "/src/assets/images/categories/comedy/comedy_1.jpg",
      "/src/assets/images/categories/comedy/comedy_2.jpg",
      "/src/assets/images/categories/comedy/comedy_3.jpg",
      "/src/assets/images/categories/comedy/comedy_4.jpg"
    ]
  },
  {
    title: "Drama",
    images: [
      "/src/assets/images/categories/drama/drama_1.jpg",
      "/src/assets/images/categories/drama/drama_2.jpg",
      "/src/assets/images/categories/drama/drama_3.jpg",
      "/src/assets/images/categories/drama/drama_4.jpg"
    ]
  },
  {
    title: "Horror",
    images: [
      "/src/assets/images/categories/horror/horror_1.jpg",
      "/src/assets/images/categories/horror/horror_2.jpg",
      "/src/assets/images/categories/horror/horror_3.jpg",
      "/src/assets/images/categories/horror/horror_4.jpg"
    ]
  },
  {
    title: "Action2",
    images: [
      "/src/assets/images/categories/action/action_1.jpg",
      "/src/assets/images/categories/action/action_2.jpg",
      "/src/assets/images/categories/action/action_3.jpg",
      "/src/assets/images/categories/action/action_4.jpg"
    ]
  },
  {
    title: "Adventure2",
    images: [
      "/src/assets/images/categories/adventure/adventure_1.jpg",
      "/src/assets/images/categories/adventure/adventure_2.jpg",
      "/src/assets/images/categories/adventure/adventure_3.jpg",
      "/src/assets/images/categories/adventure/adventure_4.jpg"
    ]
  },
  {
    title: "Comedy2",
    images: [
      "/src/assets/images/categories/comedy/comedy_1.jpg",
      "/src/assets/images/categories/comedy/comedy_2.jpg",
      "/src/assets/images/categories/comedy/comedy_3.jpg",
      "/src/assets/images/categories/comedy/comedy_4.jpg"
    ]
  },
  {
    title: "Drama2",
    images: [
      "/src/assets/images/categories/drama/drama_1.jpg",
      "/src/assets/images/categories/drama/drama_2.jpg",
      "/src/assets/images/categories/drama/drama_3.jpg",
      "/src/assets/images/categories/drama/drama_4.jpg"
    ]
  },
  {
    title: "Horror2",
    images: [
      "/src/assets/images/categories/horror/horror_1.jpg",
      "/src/assets/images/categories/horror/horror_2.jpg",
      "/src/assets/images/categories/horror/horror_3.jpg",
      "/src/assets/images/categories/horror/horror_4.jpg"
    ]
  },
  {
    title: "Action3",
    images: [
      "/src/assets/images/categories/action/action_1.jpg",
      "/src/assets/images/categories/action/action_2.jpg",
      "/src/assets/images/categories/action/action_3.jpg",
      "/src/assets/images/categories/action/action_4.jpg"
    ]
  },
  {
    title: "Adventure3",
    images: [
      "/src/assets/images/categories/adventure/adventure_1.jpg",
      "/src/assets/images/categories/adventure/adventure_2.jpg",
      "/src/assets/images/categories/adventure/adventure_3.jpg",
      "/src/assets/images/categories/adventure/adventure_4.jpg"
    ]
  },
  {
    title: "Comedy3",
    images: [
      "/src/assets/images/categories/comedy/comedy_1.jpg",
      "/src/assets/images/categories/comedy/comedy_2.jpg",
      "/src/assets/images/categories/comedy/comedy_3.jpg",
      "/src/assets/images/categories/comedy/comedy_4.jpg"
    ]
  },
  {
    title: "Drama3",
    images: [
      "/src/assets/images/categories/drama/drama_1.jpg",
      "/src/assets/images/categories/drama/drama_2.jpg",
      "/src/assets/images/categories/drama/drama_3.jpg",
      "/src/assets/images/categories/drama/drama_4.jpg"
    ]
  },
  {
    title: "Horror3",
    images: [
      "/src/assets/images/categories/horror/horror_1.jpg",
      "/src/assets/images/categories/horror/horror_2.jpg",
      "/src/assets/images/categories/horror/horror_3.jpg",
      "/src/assets/images/categories/horror/horror_4.jpg"
    ]
  },
  {
    title: "Action4",
    images: [
      "/src/assets/images/categories/action/action_1.jpg",
      "/src/assets/images/categories/action/action_2.jpg",
      "/src/assets/images/categories/action/action_3.jpg",
      "/src/assets/images/categories/action/action_4.jpg"
    ]
  },
  {
    title: "Adventure4",
    images: [
      "/src/assets/images/categories/adventure/adventure_1.jpg",
      "/src/assets/images/categories/adventure/adventure_2.jpg",
      "/src/assets/images/categories/adventure/adventure_3.jpg",
      "/src/assets/images/categories/adventure/adventure_4.jpg"
    ]
  },
  {
    title: "Comedy4",
    images: [
      "/src/assets/images/categories/comedy/comedy_1.jpg",
      "/src/assets/images/categories/comedy/comedy_2.jpg",
      "/src/assets/images/categories/comedy/comedy_3.jpg",
      "/src/assets/images/categories/comedy/comedy_4.jpg"
    ]
  },
  {
    title: "Drama4",
    images: [
      "/src/assets/images/categories/drama/drama_1.jpg",
      "/src/assets/images/categories/drama/drama_2.jpg",
      "/src/assets/images/categories/drama/drama_3.jpg",
      "/src/assets/images/categories/drama/drama_4.jpg"
    ]
  },
  {
    title: "Horror4",
    images: [
      "/src/assets/images/categories/horror/horror_1.jpg",
      "/src/assets/images/categories/horror/horror_2.jpg",
      "/src/assets/images/categories/horror/horror_3.jpg",
      "/src/assets/images/categories/horror/horror_4.jpg"
    ]
  }
];
const Categories = () => {
  const sliderNavigationId = "categories-slider-navigation";
  return /* @__PURE__ */ jsx(
    Section,
    {
      title: "Explore our wide variety of categories",
      titleId: "categories-title",
      description: "Whether you're looking for a comedy to make you laugh, a drama to make you think, or a documentary to learn something new",
      actions: /* @__PURE__ */ jsx(
        SliderNavigation,
        {
          mode: "tile",
          id: sliderNavigationId
        }
      ),
      isActionsHiddenOnMobile: true,
      children: /* @__PURE__ */ jsx(
        Slider,
        {
          navigationTargetElementId: sliderNavigationId,
          isBeyondTheViewportOnMobileS: true,
          children: categoryItems.map((categoryItem, index2) => /* @__PURE__ */ createElement(
            CategoryCard,
            {
              ...categoryItem,
              key: index2
            }
          ))
        }
      )
    }
  );
};
const Grid$1 = "";
const Grid = (props) => {
  const {
    columns = 1,
    children
  } = props;
  return /* @__PURE__ */ jsx(
    "ul",
    {
      className: classNames("grid", {
        [`grid--${columns}`]: columns > 1
      }),
      children: children.map((child, index2) => /* @__PURE__ */ jsx(
        "li",
        {
          className: "grid__item",
          children: child
        },
        index2
      ))
    }
  );
};
const DeviceCard$1 = "";
const DeviceCard = (props) => {
  const {
    title,
    description,
    imgSrc
  } = props;
  return /* @__PURE__ */ jsxs("div", { className: "device-card", children: [
    /* @__PURE__ */ jsxs("header", { className: "device-card__header", children: [
      /* @__PURE__ */ jsx("div", { className: "device-card__image-wrapper", children: /* @__PURE__ */ jsx(
        "img",
        {
          className: "device-card__image",
          src: imgSrc,
          width: 40,
          height: 40,
          alt: "",
          loading: "lazy"
        }
      ) }),
      /* @__PURE__ */ jsx("h3", { className: "device-card__title h4", children: title })
    ] }),
    /* @__PURE__ */ jsx("div", { className: "device-card__description", children: /* @__PURE__ */ jsx("p", { children: description }) })
  ] });
};
const deviceImgSrc_1 = "/assets/images/1.svg";
const deviceImgSrc_2 = "/assets/images/2.svg";
const deviceImgSrc_3 = "/assets/images/3.svg";
const deviceImgSrc_4 = "/assets/images/4.svg";
const deviceImgSrc_5 = "/assets/images/5.svg";
const deviceImgSrc_6 = "/assets/images/6.svg";
const Devices = () => {
  const deviceItems = [
    {
      title: "Smartphones",
      description: "StreamVibe is optimized for both Android and iOS smartphones. Download our app from the Google Play Store or the Apple App Store",
      imgSrc: deviceImgSrc_1
    },
    {
      title: "Tablet",
      description: "StreamVibe is optimized for both Android and iOS smartphones. Download our app from the Google Play Store or the Apple App Store",
      imgSrc: deviceImgSrc_2
    },
    {
      title: "Smart TV",
      description: "StreamVibe is optimized for both Android and iOS smartphones. Download our app from the Google Play Store or the Apple App Store",
      imgSrc: deviceImgSrc_3
    },
    {
      title: "Laptops",
      description: "StreamVibe is optimized for both Android and iOS smartphones. Download our app from the Google Play Store or the Apple App Store",
      imgSrc: deviceImgSrc_4
    },
    {
      title: "Gaming Consoles",
      description: "StreamVibe is optimized for both Android and iOS smartphones. Download our app from the Google Play Store or the Apple App Store",
      imgSrc: deviceImgSrc_5
    },
    {
      title: "VR Headsets",
      description: "StreamVibe is optimized for both Android and iOS smartphones. Download our app from the Google Play Store or the Apple App Store",
      imgSrc: deviceImgSrc_6
    }
  ];
  return /* @__PURE__ */ jsx(
    Section,
    {
      title: "We Provide you streaming experience across various devices.",
      titleId: "devices-title",
      description: "With StreamVibe, you can enjoy your favorite movies and TV shows anytime, anywhere. Our platform is designed to be compatible with a wide range of devices, ensuring that you never miss a moment of entertainment.",
      children: /* @__PURE__ */ jsx(Grid, { columns: 3, children: deviceItems.map((deviceItem, index2) => /* @__PURE__ */ createElement(DeviceCard, { ...deviceItem, key: index2 })) })
    }
  );
};
const AccordionGroup$1 = "";
const AccordionGroup = (props) => {
  const {
    className,
    /**
     * '' (default) | 'dark'
     */
    mode = "",
    columns = 1,
    children,
    isOrderedList = true
  } = props;
  const itemsPerColumn = Math.ceil(children.length / columns);
  const ListTag = isOrderedList ? "ol" : "ul";
  return /* @__PURE__ */ jsx(
    ListTag,
    {
      className: classNames(className, "accordion-group", {
        [`accordion-group--${columns}-columns`]: columns > 1,
        "accordion-group--has-counter": isOrderedList,
        [`accordion-group--${mode}`]: mode
      }),
      children: children.map((child, index2) => /* @__PURE__ */ jsx(
        "li",
        {
          className: classNames("accordion-group__item", {
            "accordion-group__item--last-column-item": columns > 1 && (index2 + 1) % itemsPerColumn === 0
          }),
          children: child
        },
        index2
      ))
    }
  );
};
const Accordion$1 = "";
const Accordion = (props) => {
  const {
    title,
    titleLevelClassName = "h5",
    subtitle,
    id,
    name,
    isOpen,
    children,
    isArrowButton = false
  } = props;
  return /* @__PURE__ */ jsxs("div", { className: "accordion", children: [
    /* @__PURE__ */ jsx(
      "details",
      {
        className: "accordion__details",
        name,
        open: isOpen,
        children: /* @__PURE__ */ jsx("summary", { className: "accordion__summary", children: /* @__PURE__ */ jsxs(
          "h3",
          {
            className: classNames("accordion__title", titleLevelClassName),
            children: [
              /* @__PURE__ */ jsx("span", { role: "term", "aria-details": id, children: title }),
              subtitle && /* @__PURE__ */ jsx("span", { className: "accordion__subtitle", children: subtitle }),
              isArrowButton && /* @__PURE__ */ jsx("div", { className: "accordion__arrow", children: /* @__PURE__ */ jsx(Icon, { name: "arrow-down" }) })
            ]
          }
        ) })
      }
    ),
    /* @__PURE__ */ jsx(
      "div",
      {
        className: "accordion__content",
        id,
        role: "definition",
        children: /* @__PURE__ */ jsx("div", { className: "accordion__content-inner", children: /* @__PURE__ */ jsx("div", { className: "accordion__content-body", children }) })
      }
    )
  ] });
};
const Questions = () => {
  const questionItems = [
    "What is StreamVibe?",
    "How much does StreamVibe cost?",
    "What content is available on StreamVibe?",
    "How can I watch StreamVibe?",
    "How do I sign up for StreamVibe?",
    "What is the StreamVibe free trial?",
    "How do I contact StreamVibe customer support?",
    "What are the StreamVibe payment methods?"
  ];
  return /* @__PURE__ */ jsx(
    Section,
    {
      title: "Frequently Asked Questions",
      titleId: "questions-title",
      description: "Got questions? We've got answers! Check out our FAQ section to find answers to the most common questions about StreamVibe.",
      actions: /* @__PURE__ */ jsx(Button, { label: "Ask a Question", href: "/support" }),
      children: /* @__PURE__ */ jsx(AccordionGroup, { columns: 2, children: questionItems.map((question, index2) => /* @__PURE__ */ jsx(
        Accordion,
        {
          title: question,
          id: `question-${index2}`,
          name: "questions",
          isOpen: index2 === 0,
          children: /* @__PURE__ */ jsx("p", { children: "StreamVibe is a streaming service that allows you to watch movies and shows on demand." })
        },
        index2
      )) })
    }
  );
};
const planGroups = [
  {
    title: "Monthly",
    isActive: true,
    items: [
      {
        title: "Basic Plan",
        description: "Enjoy an extensive library of movies and shows, featuring a range of content, including recently released titles.",
        price: {
          value: "$9.99",
          label: "/month"
        }
      },
      {
        title: "Standard Plan",
        description: "Access to a wider selection of movies and shows, including most new releases and exclusive content",
        price: {
          value: "$12.99",
          label: "/month"
        }
      },
      {
        title: "Premium Plan",
        description: "Access to a widest selection of movies and shows, including all new releases and Offline Viewing",
        price: {
          value: "$14.99",
          label: "/month"
        }
      }
    ]
  },
  {
    title: "Yearly",
    items: [
      {
        title: "Basic Plan",
        description: "Enjoy an extensive library of movies and shows, featuring a range of content, including recently released titles.",
        price: {
          value: "$99.99",
          label: "/year"
        }
      },
      {
        title: "Standard Plan",
        description: "Access to a wider selection of movies and shows, including most new releases and exclusive content",
        price: {
          value: "$129.99",
          label: "/year"
        }
      },
      {
        title: "Premium Plan",
        description: "Access to a widest selection of movies and shows, including all new releases and Offline Viewing",
        price: {
          value: "$149.99",
          label: "/year"
        }
      }
    ]
  }
];
const PlanCard$1 = "";
const PlanCard = (props) => {
  const {
    title,
    description,
    price
  } = props;
  return /* @__PURE__ */ jsxs("div", { className: "plan-card", children: [
    /* @__PURE__ */ jsxs("div", { className: "plan-card__info", children: [
      /* @__PURE__ */ jsx("h3", { className: "plan-card__title h4", children: title }),
      /* @__PURE__ */ jsx("div", { className: "plan-card__description", children: /* @__PURE__ */ jsx("p", { children: description }) })
    ] }),
    /* @__PURE__ */ jsxs("div", { className: "plan-card__conditions", children: [
      /* @__PURE__ */ jsx("span", { className: "plan-card__price", children: price.value }),
      /* @__PURE__ */ jsx("span", { className: "plan-card__period", children: price.label })
    ] }),
    /* @__PURE__ */ jsxs("div", { className: "plan-card__actions", children: [
      /* @__PURE__ */ jsx(
        Button,
        {
          label: "Start Free Trial",
          href: "/subscriptions",
          mode: "black-08"
        }
      ),
      /* @__PURE__ */ jsx(
        Button,
        {
          label: "Choose Plan",
          href: "/subscriptions"
        }
      )
    ] })
  ] });
};
const TabsNavigation$1 = "";
const getIdFromTitle = (title) => {
  return title.toLocaleLowerCase().replaceAll(" ", "-");
};
const getTabsElementsIdsFromTitle = (title) => {
  const titleFormatted = getIdFromTitle(title);
  return {
    buttonId: `${titleFormatted}-tab`,
    contentId: `${titleFormatted}-tabpanel`
  };
};
const TabsNavigation = (props) => {
  const {
    className,
    id,
    title,
    items = []
  } = props;
  const titleFormatted = getIdFromTitle(title);
  const titleId = `${titleFormatted}-title`;
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: classNames(className, "tabs-navigation"),
      id,
      role: "tablist",
      "aria-labelledby": titleId,
      "data-js-tabs-navigation": "",
      children: [
        /* @__PURE__ */ jsx("h3", { className: "visually-hidden", id: titleId, children: title }),
        items.map((item, index2) => {
          const { buttonId, contentId } = getTabsElementsIdsFromTitle(item.title);
          return /* @__PURE__ */ jsx(
            "div",
            {
              className: classNames("tabs-navigation__button", {
                "is-active": item.isActive
              }),
              id: buttonId,
              "aria-controls": contentId,
              role: "tab",
              "aria-selected": item.isActive,
              tabIndex: item.isActive ? 0 : -1,
              "data-js-tabs-button": "",
              children: item.title
            },
            index2
          );
        })
      ]
    }
  );
};
const Tabs$1 = "";
const Tabs = (props) => {
  const {
    className,
    title,
    items = [],
    navigationTargetElementId = null,
    isEnableOnlyOnMobile = false
  } = props;
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: classNames(className, "tabs", {
        "tabs--enable-only-on-mobile": isEnableOnlyOnMobile
      }),
      "data-js-tabs": JSON.stringify({
        navigationTargetElementId
      }),
      children: [
        !navigationTargetElementId && /* @__PURE__ */ jsx(TabsNavigation, { title, items }),
        /* @__PURE__ */ jsx("div", { className: "tabs__body", children: items.map((item, index2) => {
          const {
            title: title2,
            children,
            isActive
          } = item;
          const { buttonId, contentId } = getTabsElementsIdsFromTitle(title2);
          return /* @__PURE__ */ jsx(
            "div",
            {
              className: classNames("tabs__content", {
                "is-active": isActive
              }),
              id: contentId,
              "aria-labelledby": buttonId,
              tabIndex: 0,
              "data-js-tabs-content": "",
              children
            },
            index2
          );
        }) })
      ]
    }
  );
};
const Plans = () => {
  const tabsTitle = "plans-tabs";
  const tabsNavigationId = "plans-tabs-navigation";
  return /* @__PURE__ */ jsx(
    Section,
    {
      title: "Choose the plan that's right for you",
      titleId: "plans-id",
      description: "Join StreamVibe and select from our flexible subscription options tailored to suit your viewing preferences. Get ready for non-stop entertainment!",
      actions: /* @__PURE__ */ jsx(
        TabsNavigation,
        {
          id: tabsNavigationId,
          title: tabsTitle,
          items: planGroups
        }
      ),
      children: /* @__PURE__ */ jsx(
        Tabs,
        {
          title: tabsTitle,
          navigationTargetElementId: tabsNavigationId,
          items: planGroups.map((planGroup) => ({
            title: planGroup.title,
            isActive: planGroup.isActive,
            children: /* @__PURE__ */ jsx(Grid, { columns: 3, children: planGroup.items.map((planItem, index2) => /* @__PURE__ */ createElement(
              PlanCard,
              {
                ...planItem,
                key: index2
              }
            )) })
          }))
        }
      )
    }
  );
};
const metadata$5 = {
  title: "Home",
  isHeaderFixed: true
};
const index = () => {
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(Hero, {}),
    /* @__PURE__ */ jsx(Categories, {}),
    /* @__PURE__ */ jsx(Devices, {}),
    /* @__PURE__ */ jsx(Questions, {}),
    /* @__PURE__ */ jsx(Plans, {})
  ] });
};
const __vite_glob_0_0 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: index,
  metadata: metadata$5
}, Symbol.toStringTag, { value: "Module" }));
const MovieBannerCard$1 = "";
const MovieBannerCard = (props) => {
  const {
    title,
    titleId,
    TitleTag = "h2",
    description,
    imgSrc,
    isSmallPaddingY = false
  } = props;
  return /* @__PURE__ */ jsxs("div", { className: "movie-banner-card", children: [
    /* @__PURE__ */ jsx(
      Image,
      {
        className: "movie-banner-card__image",
        src: imgSrc
      }
    ),
    /* @__PURE__ */ jsxs(
      "div",
      {
        className: classNames("movie-banner-card__inner", {
          "movie-banner-card__inner--small-padding-y": isSmallPaddingY
        }),
        children: [
          /* @__PURE__ */ jsxs("div", { className: "movie-banner-card__body", children: [
            /* @__PURE__ */ jsx(
              TitleTag,
              {
                className: "movie-banner-card__title h3",
                id: titleId,
                children: title
              }
            ),
            /* @__PURE__ */ jsx("div", { className: "movie-banner-card__description hidden-mobile", children: /* @__PURE__ */ jsx("p", { children: description }) })
          ] }),
          /* @__PURE__ */ jsxs("footer", { className: "movie-banner-card__footer", children: [
            /* @__PURE__ */ jsx(
              Button,
              {
                className: "movie-banner-card__play-button",
                iconName: "play",
                hasFillIcon: true,
                label: "Play Now"
              }
            ),
            /* @__PURE__ */ jsxs("div", { className: "movie-banner-card__actions", children: [
              /* @__PURE__ */ jsx(
                Button,
                {
                  mode: "black-06",
                  iconName: "plus",
                  label: "Add to playlist",
                  isLabelHidden: true
                }
              ),
              /* @__PURE__ */ jsx(
                Button,
                {
                  mode: "black-06",
                  iconName: "like",
                  label: "Like",
                  isLabelHidden: true
                }
              ),
              /* @__PURE__ */ jsx(
                Button,
                {
                  mode: "black-06",
                  iconName: "volume",
                  label: "Mute",
                  isLabelHidden: true
                }
              )
            ] })
          ] })
        ]
      }
    )
  ] });
};
const MovieBanner = () => {
  const titleId = "movie-banner-title";
  return /* @__PURE__ */ jsx(
    "section",
    {
      className: "container",
      "aria-labelledby": titleId,
      children: /* @__PURE__ */ jsx(
        MovieBannerCard,
        {
          title: "Kantara",
          titleId,
          TitleTag: "h1",
          description: "A fiery young man clashes with an unflinching forest officer in a south Indian village where spirituality, fate and folklore rule the lands.",
          imgSrc: "/src/assets/images/movie-banner/2.jpg",
          isSmallPaddingY: true
        }
      )
    }
  );
};
const MovieDetails$1 = "";
const PersonCard$1 = "";
const PersonCard = (props) => {
  const {
    imgSrc,
    imgAlt,
    name,
    subtitle
  } = props;
  const hasBody = Boolean(name || subtitle);
  return /* @__PURE__ */ jsxs("div", { className: "person-card", children: [
    /* @__PURE__ */ jsx(
      Image,
      {
        className: "person-card__image",
        src: imgSrc,
        alt: imgAlt,
        title: imgAlt
      }
    ),
    hasBody && /* @__PURE__ */ jsxs("div", { className: "person-card__body", children: [
      name && /* @__PURE__ */ jsx("h4", { className: "person-card__name", children: name }),
      subtitle && /* @__PURE__ */ jsx("p", { className: "person-card__subtitle", children: subtitle })
    ] })
  ] });
};
const ReviewCard$1 = "";
const RatingView$1 = "";
const starsUnfilledImgSrc = "/assets/images/stars_unfilled.svg";
const starsFilledImgSrc = "/assets/images/stars_filled.svg";
const RatingView = (props) => {
  const {
    value = 5,
    label
  } = props;
  const ariaLabel = `Rating: ${value} stars`;
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: "rating-view",
      "aria-label": ariaLabel,
      title: ariaLabel,
      style: {
        "--ratingViewValue": value
      },
      children: [
        /* @__PURE__ */ jsxs("div", { className: "rating-view__stars", children: [
          /* @__PURE__ */ jsx(
            "img",
            {
              className: "rating-view__stars-unfilled",
              src: starsUnfilledImgSrc,
              width: 98,
              height: 18,
              alt: ""
            }
          ),
          /* @__PURE__ */ jsx(
            "img",
            {
              className: "rating-view__stars-filled",
              src: starsFilledImgSrc,
              width: 98,
              height: 18,
              alt: ""
            }
          )
        ] }),
        label && /* @__PURE__ */ jsx("div", { className: "rating-view__label", children: label })
      ]
    }
  );
};
const ReviewCard = (props) => {
  const {
    name,
    subtitle,
    description,
    ratingValue
  } = props;
  return /* @__PURE__ */ jsxs("div", { className: "review-card", children: [
    /* @__PURE__ */ jsxs("header", { className: "review-card__header", children: [
      /* @__PURE__ */ jsxs("div", { className: "review-card__author", children: [
        /* @__PURE__ */ jsx("h4", { className: "review-card__name h6", children: name }),
        /* @__PURE__ */ jsx("p", { className: "review-card__subtitle", children: subtitle })
      ] }),
      /* @__PURE__ */ jsx(Badge, { children: /* @__PURE__ */ jsx(
        RatingView,
        {
          value: ratingValue,
          label: ratingValue
        }
      ) })
    ] }),
    /* @__PURE__ */ jsx("div", { className: "review-card__body", children: /* @__PURE__ */ jsx("p", { children: description }) })
  ] });
};
const Tags$1 = "";
const Tags = (props) => {
  const {
    items = []
  } = props;
  return /* @__PURE__ */ jsx("div", { className: "tags", children: /* @__PURE__ */ jsx("ul", { className: "tags__list", children: items.map((tag, index2) => /* @__PURE__ */ jsx("li", { className: "tags__item", children: tag }, index2)) }) });
};
const Ratings$1 = "";
const Ratings = (props) => {
  const {
    items = []
  } = props;
  return /* @__PURE__ */ jsx("div", { className: "ratings", children: /* @__PURE__ */ jsx("ul", { className: "ratings__list", children: items.map(({ title, ratingValue }, index2) => /* @__PURE__ */ jsxs("li", { className: "ratings__item", children: [
    /* @__PURE__ */ jsx("h4", { className: "ratings__title", children: title }),
    /* @__PURE__ */ jsx(
      RatingView,
      {
        value: ratingValue,
        label: ratingValue
      }
    )
  ] }, index2)) }) });
};
const MovieDetails = (props) => {
  const {
    seasons
  } = props;
  const titleId = "movie-details-title";
  const castSliderNavigationId = "movie-cast-slider-navigation";
  const castItems = [
    { imgSrc: "/src/assets/images/people/cast_1.jpg", imgAlt: "People_1" },
    { imgSrc: "/src/assets/images/people/cast_2.jpg", imgAlt: "People_2" },
    { imgSrc: "/src/assets/images/people/cast_3.jpg", imgAlt: "People_3" },
    { imgSrc: "/src/assets/images/people/cast_4.jpg", imgAlt: "People_4" },
    { imgSrc: "/src/assets/images/people/cast_5.jpg", imgAlt: "People_5" },
    { imgSrc: "/src/assets/images/people/cast_6.jpg", imgAlt: "People_6" },
    { imgSrc: "/src/assets/images/people/cast_7.jpg", imgAlt: "People_7" },
    { imgSrc: "/src/assets/images/people/cast_8.jpg", imgAlt: "People_8" },
    { imgSrc: "/src/assets/images/people/cast_1.jpg", imgAlt: "People_9" }
  ];
  const reviewItems = [
    {
      name: "Aniket Roy",
      subtitle: "From India",
      description: "This movie was recommended to me by a very dear friend who went for the movie by herself. I went to the cinemas to watch but had a houseful board so couldn’t watch it.",
      ratingValue: 4.5
    },
    {
      name: "Swaraj",
      subtitle: "From India",
      description: "A restless king promises his lands to the local tribals in exchange of a stone (Panjurli, a deity of Keradi Village) wherein he finds solace and peace of mind.",
      ratingValue: 5
    },
    {
      name: "Aniket Roy",
      subtitle: "From India",
      description: "This movie was recommended to me by a very dear friend who went for the movie by herself. I went to the cinemas to watch but had a houseful board so couldn’t watch it.",
      ratingValue: 4.5
    },
    {
      name: "Swaraj",
      subtitle: "From India",
      description: "A restless king promises his lands to the local tribals in exchange of a stone (Panjurli, a deity of Keradi Village) wherein he finds solace and peace of mind.",
      ratingValue: 5
    },
    {
      name: "Aniket Roy",
      subtitle: "From India",
      description: "This movie was recommended to me by a very dear friend who went for the movie by herself. I went to the cinemas to watch but had a houseful board so couldn’t watch it.",
      ratingValue: 4.5
    },
    {
      name: "Swaraj",
      subtitle: "From India",
      description: "A restless king promises his lands to the local tribals in exchange of a stone (Panjurli, a deity of Keradi Village) wherein he finds solace and peace of mind.",
      ratingValue: 5
    },
    {
      name: "Aniket Roy",
      subtitle: "From India",
      description: "This movie was recommended to me by a very dear friend who went for the movie by herself. I went to the cinemas to watch but had a houseful board so couldn’t watch it.",
      ratingValue: 4.5
    },
    {
      name: "Swaraj",
      subtitle: "From India",
      description: "A restless king promises his lands to the local tribals in exchange of a stone (Panjurli, a deity of Keradi Village) wherein he finds solace and peace of mind.",
      ratingValue: 5
    }
  ];
  return /* @__PURE__ */ jsxs(
    "section",
    {
      className: "movie-details container",
      "aria-labelledby": titleId,
      children: [
        /* @__PURE__ */ jsx("h2", { className: "visually-hidden", id: titleId, children: "Detailed movie information" }),
        /* @__PURE__ */ jsxs("div", { className: "movie-details__main", children: [
          seasons && /* @__PURE__ */ jsx("div", { className: "movie-details__panel movie-details__panel--seasons", children: /* @__PURE__ */ jsxs("div", { className: "movie-details__group movie-details__group--big-gap-y", children: [
            /* @__PURE__ */ jsx("h3", { className: "h4", children: "Seasons and Episodes" }),
            seasons
          ] }) }),
          /* @__PURE__ */ jsx("div", { className: "movie-details__panel movie-details__panel--description", children: /* @__PURE__ */ jsxs("div", { className: "movie-details__group", children: [
            /* @__PURE__ */ jsx("h3", { className: "movie-details__title", children: "Description" }),
            /* @__PURE__ */ jsx("div", { className: "movie-details__description", children: /* @__PURE__ */ jsx("p", { children: "A fiery young man clashes with an unflinching forest officer in a south Indian village where spirituality, fate and folklore rule the lands." }) })
          ] }) }),
          /* @__PURE__ */ jsxs("div", { className: "movie-details__panel", children: [
            /* @__PURE__ */ jsxs("header", { className: "movie-details__panel-header", children: [
              /* @__PURE__ */ jsx("h3", { className: "movie-details__title", children: "Cast" }),
              /* @__PURE__ */ jsx(
                SliderNavigation,
                {
                  id: castSliderNavigationId,
                  hasPagination: false,
                  mode: "rounded",
                  buttonMode: "black-08"
                }
              )
            ] }),
            /* @__PURE__ */ jsx(
              Slider,
              {
                navigationTargetElementId: castSliderNavigationId,
                hasScrollbarOnMobile: false,
                sliderParams: {
                  slidesPerView: "auto",
                  spaceBetween: 10,
                  breakpoints: {
                    1024: {
                      slidesPerView: "auto",
                      spaceBetween: 20,
                      allowTouchMove: false
                    }
                  }
                },
                children: castItems.map((castItem, index2) => /* @__PURE__ */ createElement(PersonCard, { ...castItem, key: index2 }))
              }
            )
          ] }),
          /* @__PURE__ */ jsxs("div", { className: "movie-details__panel movie-details__panel--large-gap-y", children: [
            /* @__PURE__ */ jsxs("header", { className: "movie-details__panel-header", children: [
              /* @__PURE__ */ jsx("h3", { className: "movie-details__title", children: "Reviews" }),
              /* @__PURE__ */ jsx(
                Button,
                {
                  mode: "black-08",
                  iconName: "plus",
                  label: "Add Your Review",
                  href: "/"
                }
              )
            ] }),
            /* @__PURE__ */ jsx(
              Slider,
              {
                navigationMode: "rounded",
                isNavigationHiddenMobile: false,
                hasScrollbarOnMobile: false,
                sliderParams: {
                  slidesPerView: 1,
                  slidesPerGroup: 1,
                  spaceBetween: 16,
                  allowTouchMove: true,
                  breakpoints: {
                    1024: {
                      slidesPerView: 2,
                      slidesPerGroup: 2,
                      spaceBetween: 20,
                      allowTouchMove: false
                    }
                  }
                },
                children: reviewItems.map((reviewItem, index2) => /* @__PURE__ */ createElement(ReviewCard, { ...reviewItem, key: index2 }))
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ jsx("aside", { className: "movie-details__info", children: /* @__PURE__ */ jsx("div", { className: "movie-details__panel", children: /* @__PURE__ */ jsxs("div", { className: "movie-details__groups", children: [
          /* @__PURE__ */ jsxs("div", { className: "movie-details__group", children: [
            /* @__PURE__ */ jsxs("h3", { className: "movie-details__title", children: [
              /* @__PURE__ */ jsx(Icon, { name: "calendar" }),
              /* @__PURE__ */ jsx("span", { children: "Released Year" })
            ] }),
            /* @__PURE__ */ jsx("div", { className: "movie-details__description", children: /* @__PURE__ */ jsx("time", { className: "h6", dateTime: "2022", children: "2022" }) })
          ] }),
          /* @__PURE__ */ jsxs("div", { className: "movie-details__group", children: [
            /* @__PURE__ */ jsxs("h3", { className: "movie-details__title", children: [
              /* @__PURE__ */ jsx(Icon, { name: "translate" }),
              /* @__PURE__ */ jsx("span", { children: "Available Languages" })
            ] }),
            /* @__PURE__ */ jsx(
              Tags,
              {
                items: ["English", "Hindi", "Tamil", "Telegu", "Kannada"]
              }
            )
          ] }),
          /* @__PURE__ */ jsxs("div", { className: "movie-details__group", children: [
            /* @__PURE__ */ jsxs("h3", { className: "movie-details__title", children: [
              /* @__PURE__ */ jsx(Icon, { name: "star" }),
              /* @__PURE__ */ jsx("span", { children: "Ratings" })
            ] }),
            /* @__PURE__ */ jsx(
              Ratings,
              {
                items: [
                  { title: "IMDb", ratingValue: 4.5 },
                  { title: "Streamvibe", ratingValue: 4 }
                ]
              }
            )
          ] }),
          /* @__PURE__ */ jsxs("div", { className: "movie-details__group", children: [
            /* @__PURE__ */ jsxs("h3", { className: "movie-details__title", children: [
              /* @__PURE__ */ jsx(Icon, { name: "genres" }),
              /* @__PURE__ */ jsx("span", { children: "Gernes" })
            ] }),
            /* @__PURE__ */ jsx(Tags, { items: ["Action", "Adventure"] })
          ] }),
          /* @__PURE__ */ jsxs("div", { className: "movie-details__group", children: [
            /* @__PURE__ */ jsx("h3", { className: "movie-details__title", children: "Director" }),
            /* @__PURE__ */ jsx(
              PersonCard,
              {
                name: "Rishab Shetty",
                subtitle: "From India",
                imgSrc: "/src/assets/images/people/director.jpg"
              }
            )
          ] }),
          /* @__PURE__ */ jsxs("div", { className: "movie-details__group", children: [
            /* @__PURE__ */ jsx("h3", { className: "movie-details__title", children: "Music" }),
            /* @__PURE__ */ jsx(
              PersonCard,
              {
                name: "B. Ajaneesh Loknath",
                subtitle: "From India",
                imgSrc: "/src/assets/images/people/music.jpg"
              }
            )
          ] })
        ] }) }) })
      ]
    }
  );
};
const metadata$4 = {
  title: "Movie - Kantara"
};
const movie = () => {
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(MovieBanner, {}),
    /* @__PURE__ */ jsx(MovieDetails, {})
  ] });
};
const __vite_glob_0_1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: movie,
  metadata: metadata$4
}, Symbol.toStringTag, { value: "Module" }));
const MoviesBanner$1 = "";
const MoviesBanner = () => {
  const titleId = "movies-banner-title";
  const movieCards = [
    {
      title: "Avengers : Endgame",
      description: "With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos's actions and undo the chaos to the universe, no matter what consequences may be in store, and no matter who they face... Avenge the fallen.",
      imgSrc: "/src/assets/images/movie-banner/1.jpg"
    },
    {
      title: "Avengers : Endgame 2",
      description: "With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos's actions and undo the chaos to the universe, no matter what consequences may be in store, and no matter who they face... Avenge the fallen.",
      imgSrc: "/src/assets/images/movie-banner/1.jpg"
    },
    {
      title: "Avengers : Endgame 3",
      description: "With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos's actions and undo the chaos to the universe, no matter what consequences may be in store, and no matter who they face... Avenge the fallen.",
      imgSrc: "/src/assets/images/movie-banner/1.jpg"
    },
    {
      title: "Avengers : Endgame 4",
      description: "With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos's actions and undo the chaos to the universe, no matter what consequences may be in store, and no matter who they face... Avenge the fallen.",
      imgSrc: "/src/assets/images/movie-banner/1.jpg"
    }
  ];
  return /* @__PURE__ */ jsxs(
    "section",
    {
      className: "movies-banner container",
      "aria-labelledby": titleId,
      children: [
        /* @__PURE__ */ jsx("h1", { className: "visually-hidden", id: titleId, children: "Movies & Shows" }),
        /* @__PURE__ */ jsx(
          Slider,
          {
            sliderParams: {
              slidesPerView: 1,
              breakpoints: {
                1024: {
                  allowTouchMove: false
                }
              }
            },
            navigationPosition: "abs-bottom",
            navigationJustifyContent: "space-between",
            hasScrollbarOnMobile: false,
            children: movieCards.map((movieCard, index2) => /* @__PURE__ */ createElement(MovieBannerCard, { ...movieCard, key: index2 }))
          }
        )
      ]
    }
  );
};
const Collections$1 = "";
const collectionGroups = [
  {
    isActive: true,
    title: "Movies",
    items: [
      {
        title: "Our Genres",
        categoryItems
      },
      {
        title: "Popular Top 10 In Genres",
        categoryItems: [
          {
            title: "Action",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          },
          {
            title: "Action 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          },
          {
            title: "Action 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          },
          {
            title: "Action 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          }
        ],
        sliderParams: {
          slidesPerView: 1.58,
          slidesPerGroup: 1,
          spaceBetween: 20,
          allowTouchMove: true,
          breakpoints: {
            481: {
              slidesPerView: 2,
              slidesPerGroup: 2,
              spaceBetween: 20,
              allowTouchMove: true
            },
            768: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: true
            },
            1024: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: false
            },
            1441: {
              slidesPerView: 4,
              slidesPerGroup: 4,
              spaceBetween: 30,
              allowTouchMove: false
            }
          }
        }
      },
      {
        title: "Trending Now",
        movieItems: [
          {
            title: "Morbius",
            imgSrc: "/src/assets/images/movies/1.jpg",
            duration: "1h 30min",
            views: "2K"
          },
          {
            title: "Bhai Jaan",
            imgSrc: "/src/assets/images/movies/2.jpg",
            duration: "1h 57min",
            views: "1.5K"
          },
          {
            title: "Suraj pe Mangal Bhari",
            imgSrc: "/src/assets/images/movies/3.jpg",
            duration: "2h 10min",
            views: "1.8K"
          },
          {
            title: "Pathan",
            imgSrc: "/src/assets/images/movies/4.jpg",
            duration: "2h 20min",
            views: "3K"
          },
          {
            title: "Ant-man",
            imgSrc: "/src/assets/images/movies/5.jpg",
            duration: "1h 42min",
            views: "5K"
          },
          {
            title: "Morbius",
            imgSrc: "/src/assets/images/movies/1.jpg",
            duration: "1h 30min",
            views: "2K"
          },
          {
            title: "Bhai Jaan",
            imgSrc: "/src/assets/images/movies/2.jpg",
            duration: "1h 57min",
            views: "1.5K"
          },
          {
            title: "Suraj pe Mangal Bhari",
            imgSrc: "/src/assets/images/movies/3.jpg",
            duration: "2h 10min",
            views: "1.8K"
          },
          {
            title: "Pathan",
            imgSrc: "/src/assets/images/movies/4.jpg",
            duration: "2h 20min",
            views: "3K"
          },
          {
            title: "Ant-man",
            imgSrc: "/src/assets/images/movies/5.jpg",
            duration: "1h 42min",
            views: "5K"
          },
          {
            title: "Morbius",
            imgSrc: "/src/assets/images/movies/1.jpg",
            duration: "1h 30min",
            views: "2K"
          },
          {
            title: "Bhai Jaan",
            imgSrc: "/src/assets/images/movies/2.jpg",
            duration: "1h 57min",
            views: "1.5K"
          },
          {
            title: "Suraj pe Mangal Bhari",
            imgSrc: "/src/assets/images/movies/3.jpg",
            duration: "2h 10min",
            views: "1.8K"
          },
          {
            title: "Pathan",
            imgSrc: "/src/assets/images/movies/4.jpg",
            duration: "2h 20min",
            views: "3K"
          },
          {
            title: "Ant-man",
            imgSrc: "/src/assets/images/movies/5.jpg",
            duration: "1h 42min",
            views: "5K"
          },
          {
            title: "Morbius",
            imgSrc: "/src/assets/images/movies/1.jpg",
            duration: "1h 30min",
            views: "2K"
          },
          {
            title: "Bhai Jaan",
            imgSrc: "/src/assets/images/movies/2.jpg",
            duration: "1h 57min",
            views: "1.5K"
          },
          {
            title: "Suraj pe Mangal Bhari",
            imgSrc: "/src/assets/images/movies/3.jpg",
            duration: "2h 10min",
            views: "1.8K"
          },
          {
            title: "Pathan",
            imgSrc: "/src/assets/images/movies/4.jpg",
            duration: "2h 20min",
            views: "3K"
          },
          {
            title: "Ant-man",
            imgSrc: "/src/assets/images/movies/5.jpg",
            duration: "1h 42min",
            views: "5K"
          }
        ]
      },
      {
        title: "New Releases",
        movieItems: [
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/6.jpg",
            released: {
              label: "14 April 2023",
              dateTime: "2023-04-14"
            }
          },
          {
            title: "Gun",
            imgSrc: "/src/assets/images/movies/7.jpg",
            released: {
              label: "22 April 2023",
              dateTime: "2023-04-22"
            }
          },
          {
            title: "Sin City",
            imgSrc: "/src/assets/images/movies/8.jpg",
            released: {
              label: "13 April 2023",
              dateTime: "2023-04-13"
            }
          },
          {
            title: "The Tomorrow War",
            imgSrc: "/src/assets/images/movies/9.jpg",
            released: {
              label: "19 April 2023",
              dateTime: "2023-04-19"
            }
          },
          {
            title: "Misfire",
            imgSrc: "/src/assets/images/movies/10.jpg",
            released: {
              label: "11 April 2023",
              dateTime: "2023-04-11"
            }
          },
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/6.jpg",
            released: {
              label: "14 April 2023",
              dateTime: "2023-04-14"
            }
          },
          {
            title: "Gun",
            imgSrc: "/src/assets/images/movies/7.jpg",
            released: {
              label: "22 April 2023",
              dateTime: "2023-04-22"
            }
          },
          {
            title: "Sin City",
            imgSrc: "/src/assets/images/movies/8.jpg",
            released: {
              label: "13 April 2023",
              dateTime: "2023-04-13"
            }
          },
          {
            title: "The Tomorrow War",
            imgSrc: "/src/assets/images/movies/9.jpg",
            released: {
              label: "19 April 2023",
              dateTime: "2023-04-19"
            }
          },
          {
            title: "Misfire",
            imgSrc: "/src/assets/images/movies/10.jpg",
            released: {
              label: "11 April 2023",
              dateTime: "2023-04-11"
            }
          },
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/6.jpg",
            released: {
              label: "14 April 2023",
              dateTime: "2023-04-14"
            }
          },
          {
            title: "Gun",
            imgSrc: "/src/assets/images/movies/7.jpg",
            released: {
              label: "22 April 2023",
              dateTime: "2023-04-22"
            }
          },
          {
            title: "Sin City",
            imgSrc: "/src/assets/images/movies/8.jpg",
            released: {
              label: "13 April 2023",
              dateTime: "2023-04-13"
            }
          },
          {
            title: "The Tomorrow War",
            imgSrc: "/src/assets/images/movies/9.jpg",
            released: {
              label: "19 April 2023",
              dateTime: "2023-04-19"
            }
          },
          {
            title: "Misfire",
            imgSrc: "/src/assets/images/movies/10.jpg",
            released: {
              label: "11 April 2023",
              dateTime: "2023-04-11"
            }
          },
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/6.jpg",
            released: {
              label: "14 April 2023",
              dateTime: "2023-04-14"
            }
          },
          {
            title: "Gun",
            imgSrc: "/src/assets/images/movies/7.jpg",
            released: {
              label: "22 April 2023",
              dateTime: "2023-04-22"
            }
          },
          {
            title: "Sin City",
            imgSrc: "/src/assets/images/movies/8.jpg",
            released: {
              label: "13 April 2023",
              dateTime: "2023-04-13"
            }
          },
          {
            title: "The Tomorrow War",
            imgSrc: "/src/assets/images/movies/9.jpg",
            released: {
              label: "19 April 2023",
              dateTime: "2023-04-19"
            }
          },
          {
            title: "Misfire",
            imgSrc: "/src/assets/images/movies/10.jpg",
            released: {
              label: "11 April 2023",
              dateTime: "2023-04-11"
            }
          }
        ]
      },
      {
        title: "Must - Watch Movies",
        movieItems: [
          {
            title: "Kantara",
            imgSrc: "/src/assets/images/movies/11.png",
            duration: "1h 57min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Pushpa2",
            imgSrc: "/src/assets/images/movies/12.png",
            duration: "1h 30min",
            rating: {
              value: 4,
              label: "20K"
            }
          },
          {
            title: "Blade Runner 2049",
            imgSrc: "/src/assets/images/movies/13.png",
            duration: "1h 42min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/14.png",
            duration: "2h 10min",
            rating: {
              value: 4,
              label: "20K"
            }
          },
          {
            title: "Kantara",
            imgSrc: "/src/assets/images/movies/11.png",
            duration: "1h 57min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Pushpa2",
            imgSrc: "/src/assets/images/movies/12.png",
            duration: "1h 30min",
            rating: {
              value: 4,
              label: "20K"
            }
          },
          {
            title: "Blade Runner 2049",
            imgSrc: "/src/assets/images/movies/13.png",
            duration: "1h 42min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/14.png",
            duration: "2h 10min",
            rating: {
              value: 4,
              label: "20K"
            }
          },
          {
            title: "Kantara",
            imgSrc: "/src/assets/images/movies/11.png",
            duration: "1h 57min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Pushpa2",
            imgSrc: "/src/assets/images/movies/12.png",
            duration: "1h 30min",
            rating: {
              value: 4,
              label: "20K"
            }
          },
          {
            title: "Blade Runner 2049",
            imgSrc: "/src/assets/images/movies/13.png",
            duration: "1h 42min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/14.png",
            duration: "2h 10min",
            rating: {
              value: 4,
              label: "20K"
            }
          },
          {
            title: "Kantara",
            imgSrc: "/src/assets/images/movies/11.png",
            duration: "1h 57min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Pushpa2",
            imgSrc: "/src/assets/images/movies/12.png",
            duration: "1h 30min",
            rating: {
              value: 4,
              label: "20K"
            }
          },
          {
            title: "Blade Runner 2049",
            imgSrc: "/src/assets/images/movies/13.png",
            duration: "1h 42min",
            rating: {
              value: 4.5,
              label: "20K"
            }
          },
          {
            title: "Adipurush",
            imgSrc: "/src/assets/images/movies/14.png",
            duration: "2h 10min",
            rating: {
              value: 4,
              label: "20K"
            }
          }
        ],
        sliderParams: {
          slidesPerView: 1.58,
          slidesPerGroup: 1,
          spaceBetween: 20,
          allowTouchMove: true,
          breakpoints: {
            481: {
              slidesPerView: 2,
              slidesPerGroup: 2,
              spaceBetween: 20,
              allowTouchMove: true
            },
            768: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: true
            },
            1024: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: false
            },
            1441: {
              slidesPerView: 4,
              slidesPerGroup: 4,
              spaceBetween: 30,
              allowTouchMove: false
            }
          }
        }
      }
    ]
  },
  {
    title: "Shows",
    items: [
      {
        title: "Our Genres 2",
        categoryItems
      },
      {
        title: "Popular Top 10 In Genres",
        categoryItems: [
          {
            title: "Action",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          },
          {
            title: "Action 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama 2",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          },
          {
            title: "Action 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama 3",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          },
          {
            title: "Action 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/action/action_1.jpg",
              "/src/assets/images/categories/action/action_2.jpg",
              "/src/assets/images/categories/action/action_3.jpg",
              "/src/assets/images/categories/action/action_4.jpg"
            ]
          },
          {
            title: "Adventure 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/adventure/adventure_1.jpg",
              "/src/assets/images/categories/adventure/adventure_2.jpg",
              "/src/assets/images/categories/adventure/adventure_3.jpg",
              "/src/assets/images/categories/adventure/adventure_4.jpg"
            ]
          },
          {
            title: "Comedy 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/comedy/comedy_1.jpg",
              "/src/assets/images/categories/comedy/comedy_2.jpg",
              "/src/assets/images/categories/comedy/comedy_3.jpg",
              "/src/assets/images/categories/comedy/comedy_4.jpg"
            ]
          },
          {
            title: "Drama 4",
            badge: "Top 10 In",
            images: [
              "/src/assets/images/categories/drama/drama_1.jpg",
              "/src/assets/images/categories/drama/drama_2.jpg",
              "/src/assets/images/categories/drama/drama_3.jpg",
              "/src/assets/images/categories/drama/drama_4.jpg"
            ]
          }
        ],
        sliderParams: {
          slidesPerView: 1.58,
          slidesPerGroup: 1,
          spaceBetween: 20,
          allowTouchMove: true,
          breakpoints: {
            481: {
              slidesPerView: 2,
              slidesPerGroup: 2,
              spaceBetween: 20,
              allowTouchMove: true
            },
            768: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: true
            },
            1024: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: false
            },
            1441: {
              slidesPerView: 4,
              slidesPerGroup: 4,
              spaceBetween: 30,
              allowTouchMove: false
            }
          }
        }
      },
      {
        title: "Trending Shows Now",
        movieItems: [
          {
            title: "Stranger Things 3",
            imgSrc: "/src/assets/images/shows/1.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/2.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Lucifer",
            imgSrc: "/src/assets/images/shows/3.png",
            duration: "14h 30min",
            season: "3 Season",
            href: "/show"
          },
          {
            title: "The Gray Man",
            imgSrc: "/src/assets/images/shows/4.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          },
          {
            title: "Stranger Things 3",
            imgSrc: "/src/assets/images/shows/1.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/2.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Lucifer",
            imgSrc: "/src/assets/images/shows/3.png",
            duration: "14h 30min",
            season: "3 Season",
            href: "/show"
          },
          {
            title: "The Gray Man",
            imgSrc: "/src/assets/images/shows/4.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          },
          {
            title: "Stranger Things 3",
            imgSrc: "/src/assets/images/shows/1.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/2.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Lucifer",
            imgSrc: "/src/assets/images/shows/3.png",
            duration: "14h 30min",
            season: "3 Season",
            href: "/show"
          },
          {
            title: "The Gray Man",
            imgSrc: "/src/assets/images/shows/4.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          },
          {
            title: "Stranger Things 3",
            imgSrc: "/src/assets/images/shows/1.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/2.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Lucifer",
            imgSrc: "/src/assets/images/shows/3.png",
            duration: "14h 30min",
            season: "3 Season",
            href: "/show"
          },
          {
            title: "The Gray Man",
            imgSrc: "/src/assets/images/shows/4.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          }
        ],
        sliderParams: {
          slidesPerView: 1.58,
          slidesPerGroup: 1,
          spaceBetween: 20,
          allowTouchMove: true,
          breakpoints: {
            481: {
              slidesPerView: 2,
              slidesPerGroup: 2,
              spaceBetween: 20,
              allowTouchMove: true
            },
            768: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: true
            },
            1024: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: false
            },
            1441: {
              slidesPerView: 4,
              slidesPerGroup: 4,
              spaceBetween: 30,
              allowTouchMove: false
            }
          }
        }
      },
      {
        title: "New Released Shows",
        movieItems: [
          {
            title: "High Town",
            imgSrc: "/src/assets/images/shows/5.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Mirzapur",
            imgSrc: "/src/assets/images/shows/6.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          },
          {
            title: "Breathe Into The Shadows",
            imgSrc: "/src/assets/images/shows/7.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Peaky Blinders",
            imgSrc: "/src/assets/images/shows/8.png",
            duration: "10h 30min",
            season: "3 Season",
            href: "/show"
          },
          {
            title: "High Town",
            imgSrc: "/src/assets/images/shows/5.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Mirzapur",
            imgSrc: "/src/assets/images/shows/6.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          },
          {
            title: "Breathe Into The Shadows",
            imgSrc: "/src/assets/images/shows/7.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Peaky Blinders",
            imgSrc: "/src/assets/images/shows/8.png",
            duration: "10h 30min",
            season: "3 Season",
            href: "/show"
          },
          {
            title: "High Town",
            imgSrc: "/src/assets/images/shows/5.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Mirzapur",
            imgSrc: "/src/assets/images/shows/6.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          },
          {
            title: "Breathe Into The Shadows",
            imgSrc: "/src/assets/images/shows/7.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Peaky Blinders",
            imgSrc: "/src/assets/images/shows/8.png",
            duration: "10h 30min",
            season: "3 Season",
            href: "/show"
          },
          {
            title: "High Town",
            imgSrc: "/src/assets/images/shows/5.png",
            duration: "12h 23min",
            season: "5 Season",
            href: "/show"
          },
          {
            title: "Mirzapur",
            imgSrc: "/src/assets/images/shows/6.png",
            duration: "7h 40min",
            season: "2 Season",
            href: "/show"
          },
          {
            title: "Breathe Into The Shadows",
            imgSrc: "/src/assets/images/shows/7.png",
            duration: "8h 20min",
            season: "4 Season",
            href: "/show"
          },
          {
            title: "Peaky Blinders",
            imgSrc: "/src/assets/images/shows/8.png",
            duration: "10h 30min",
            season: "3 Season",
            href: "/show"
          }
        ],
        sliderParams: {
          slidesPerView: 1.58,
          slidesPerGroup: 1,
          spaceBetween: 20,
          allowTouchMove: true,
          breakpoints: {
            481: {
              slidesPerView: 2,
              slidesPerGroup: 2,
              spaceBetween: 20,
              allowTouchMove: true
            },
            768: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: true
            },
            1024: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: false
            },
            1441: {
              slidesPerView: 4,
              slidesPerGroup: 4,
              spaceBetween: 30,
              allowTouchMove: false
            }
          }
        }
      },
      {
        title: "Must - Watch Movies",
        movieItems: [
          {
            title: "Duranga",
            imgSrc: "/src/assets/images/shows/9.png",
            duration: "7h 40min",
            rating: {
              value: 4.5,
              label: "12K"
            }
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/10.png",
            duration: "12h 23min",
            rating: {
              value: 5,
              label: "28K"
            }
          },
          {
            title: "Mai",
            imgSrc: "/src/assets/images/shows/11.png",
            duration: "10h 30min",
            rating: {
              value: 4,
              label: "2K"
            }
          },
          {
            title: "Stranger Things",
            imgSrc: "/src/assets/images/shows/12.png",
            duration: "8h 20min",
            rating: {
              value: 4.5,
              label: "32K"
            }
          },
          {
            title: "Duranga",
            imgSrc: "/src/assets/images/shows/9.png",
            duration: "7h 40min",
            rating: {
              value: 4.5,
              label: "12K"
            }
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/10.png",
            duration: "12h 23min",
            rating: {
              value: 5,
              label: "28K"
            }
          },
          {
            title: "Mai",
            imgSrc: "/src/assets/images/shows/11.png",
            duration: "10h 30min",
            rating: {
              value: 4,
              label: "2K"
            }
          },
          {
            title: "Stranger Things",
            imgSrc: "/src/assets/images/shows/12.png",
            duration: "8h 20min",
            rating: {
              value: 4.5,
              label: "32K"
            }
          },
          {
            title: "Duranga",
            imgSrc: "/src/assets/images/shows/9.png",
            duration: "7h 40min",
            rating: {
              value: 4.5,
              label: "12K"
            }
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/10.png",
            duration: "12h 23min",
            rating: {
              value: 5,
              label: "28K"
            }
          },
          {
            title: "Mai",
            imgSrc: "/src/assets/images/shows/11.png",
            duration: "10h 30min",
            rating: {
              value: 4,
              label: "2K"
            }
          },
          {
            title: "Stranger Things",
            imgSrc: "/src/assets/images/shows/12.png",
            duration: "8h 20min",
            rating: {
              value: 4.5,
              label: "32K"
            }
          },
          {
            title: "Duranga",
            imgSrc: "/src/assets/images/shows/9.png",
            duration: "7h 40min",
            rating: {
              value: 4.5,
              label: "12K"
            }
          },
          {
            title: "Money Heist",
            imgSrc: "/src/assets/images/shows/10.png",
            duration: "12h 23min",
            rating: {
              value: 5,
              label: "28K"
            }
          },
          {
            title: "Mai",
            imgSrc: "/src/assets/images/shows/11.png",
            duration: "10h 30min",
            rating: {
              value: 4,
              label: "2K"
            }
          },
          {
            title: "Stranger Things",
            imgSrc: "/src/assets/images/shows/12.png",
            duration: "8h 20min",
            rating: {
              value: 4.5,
              label: "32K"
            }
          }
        ],
        sliderParams: {
          slidesPerView: 1.58,
          slidesPerGroup: 1,
          spaceBetween: 20,
          allowTouchMove: true,
          breakpoints: {
            481: {
              slidesPerView: 2,
              slidesPerGroup: 2,
              spaceBetween: 20,
              allowTouchMove: true
            },
            768: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: true
            },
            1024: {
              slidesPerView: 3,
              slidesPerGroup: 3,
              spaceBetween: 20,
              allowTouchMove: false
            },
            1441: {
              slidesPerView: 4,
              slidesPerGroup: 4,
              spaceBetween: 30,
              allowTouchMove: false
            }
          }
        }
      }
    ]
  }
];
const MovieCard$1 = "";
const MovieCard = (props) => {
  const {
    title,
    imgSrc,
    duration,
    views,
    released,
    rating,
    season,
    href = "/movie"
  } = props;
  return /* @__PURE__ */ jsxs(
    "a",
    {
      className: "movie-card",
      href,
      title,
      children: [
        /* @__PURE__ */ jsx("h3", { className: "visually-hidden", children: title }),
        /* @__PURE__ */ jsx(
          Image,
          {
            className: "movie-card__image",
            src: imgSrc
          }
        ),
        /* @__PURE__ */ jsxs("div", { className: "movie-card__body", children: [
          duration && /* @__PURE__ */ jsx(
            Badge,
            {
              iconName: "clock",
              iconAriaLabel: "Duration",
              hasFillIcon: true,
              children: duration
            }
          ),
          season && /* @__PURE__ */ jsx(
            Badge,
            {
              iconName: "catalog",
              hasFillIcon: true,
              children: season
            }
          ),
          rating && /* @__PURE__ */ jsx(Badge, { children: /* @__PURE__ */ jsx(RatingView, { ...rating }) }),
          views && /* @__PURE__ */ jsx(
            Badge,
            {
              iconName: "eye",
              iconAriaLabel: "Views",
              hasFillIcon: true,
              children: views
            }
          ),
          released && /* @__PURE__ */ jsxs(Badge, { className: "movie-card__released-badge", children: [
            "Released at ",
            /* @__PURE__ */ jsx("time", { className: "movie-card__released-badge-label", dateTime: released.dateTime, children: released.label })
          ] })
        ] })
      ]
    }
  );
};
const Collections = () => {
  return /* @__PURE__ */ jsx(
    Tabs,
    {
      className: "collections container",
      title: "collections",
      isEnableOnlyOnMobile: true,
      items: collectionGroups.map((collectionGroup) => ({
        isActive: collectionGroup.isActive,
        title: collectionGroup.title,
        children: /* @__PURE__ */ jsxs("div", { className: "collections__group", children: [
          /* @__PURE__ */ jsx("p", { className: "collections__title hidden-mobile", children: collectionGroup.title }),
          collectionGroup.items.map((collectionItem, index2) => {
            const {
              title,
              categoryItems: categoryItems2,
              movieItems,
              sliderParams
            } = collectionItem;
            const titleFormatted = `${getIdFromTitle(collectionGroup.title)}-${getIdFromTitle(title)}`;
            const titleId = `${titleFormatted}-title`;
            const sliderNavigationId = `${titleFormatted}-slider-navigation`;
            return /* @__PURE__ */ jsx(
              Section,
              {
                className: "collections__section",
                title,
                titleId,
                actions: /* @__PURE__ */ jsx(
                  SliderNavigation,
                  {
                    id: sliderNavigationId,
                    mode: "tile"
                  }
                ),
                isActionsHiddenOnMobile: true,
                children: /* @__PURE__ */ jsx(
                  Slider,
                  {
                    sliderParams,
                    navigationTargetElementId: sliderNavigationId,
                    isBeyondTheViewportOnMobileS: true,
                    children: (categoryItems2 == null ? void 0 : categoryItems2.map((categoryItem, index22) => /* @__PURE__ */ createElement(CategoryCard, { ...categoryItem, key: index22 }))) ?? (movieItems == null ? void 0 : movieItems.map((movieItem, index22) => /* @__PURE__ */ createElement(MovieCard, { ...movieItem, key: index22 })))
                  }
                )
              },
              index2
            );
          })
        ] })
      }))
    }
  );
};
const metadata$3 = {
  title: "Movies & Shows"
};
const movies = () => {
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(MoviesBanner, {}),
    /* @__PURE__ */ jsx(Collections, {})
  ] });
};
const __vite_glob_0_2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: movies,
  metadata: metadata$3
}, Symbol.toStringTag, { value: "Module" }));
const ShowBanner = () => {
  const titleId = "show-banner-title";
  return /* @__PURE__ */ jsx(
    "section",
    {
      className: "container",
      "aria-labelledby": titleId,
      children: /* @__PURE__ */ jsx(
        MovieBannerCard,
        {
          title: "Stranger Things",
          titleId,
          TitleTag: "h1",
          description: "When a young boy vanishes, a small town uncovers a mystery involving secret experiments, terrifying supernatural forces and one strange little girl.",
          imgSrc: "/src/assets/images/movie-banner/3.jpg",
          isSmallPaddingY: true
        }
      )
    }
  );
};
const Seasons$1 = "";
const videoExampleSrc = "/assets/example.mp4";
const videoPosterSrc = "/assets/images/1.jpg";
const seasonItems = [
  {
    title: "Season 01",
    subtitle: "9 Episodes",
    episodes: [
      {
        number: "01",
        title: "Chapter One : The Vanishing of Will Byers",
        description: "On his way from a friend’s house, young Will sees something terrifying . Nearby, a sinister secret lurks in the depths of a government lab.",
        duration: "49 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "02",
        title: "Chapter Two: The Weirdo on Maple Street",
        description: "Lucas, Mike and Dustin try to talk to the girl they found in the woods. Hopper questions an anxious Joyce about an unsettling phone call.",
        duration: "56 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "03",
        title: "Chapter Three: Holly, Jolly",
        description: "An increasingly concerned Nancy looks for Barb and finds out what Jonathan`s been up to. Joyce is convinced Will is trying to talk to her.",
        duration: "52 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "04",
        title: "Chapter Four: The Body",
        description: "Refusing to believe Will is dead, Joyce tries to connect with her son. The boys give Eleven a makeover..",
        duration: "51 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "05",
        title: "Chapter Five: The Flea and the Acrobat",
        description: "Hopper breaks into the lab while Nancy and Jonathan confront the force that took Will. The boys ask Mr. Clarke how to travel to another dimension.",
        duration: "53 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "06",
        title: "Chapter One : The Vanishing of Will Byers",
        description: "On his way from a friend’s house, young Will sees something terrifying . Nearby, a sinister secret lurks in the depths of a government lab.",
        duration: "49 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "07",
        title: "Chapter Two: The Weirdo on Maple Street",
        description: "Lucas, Mike and Dustin try to talk to the girl they found in the woods. Hopper questions an anxious Joyce about an unsettling phone call.",
        duration: "56 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "08",
        title: "Chapter Three: Holly, Jolly",
        description: "An increasingly concerned Nancy looks for Barb and finds out what Jonathan`s been up to. Joyce is convinced Will is trying to talk to her.",
        duration: "52 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "09",
        title: "Chapter Four: The Body",
        description: "Refusing to believe Will is dead, Joyce tries to connect with her son. The boys give Eleven a makeover..",
        duration: "51 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      }
    ]
  },
  {
    title: "Season 02",
    subtitle: "5 Episodes",
    episodes: [
      {
        number: "01",
        title: "Chapter Five: The Flea and the Acrobat",
        description: "Hopper breaks into the lab while Nancy and Jonathan confront the force that took Will. The boys ask Mr. Clarke how to travel to another dimension.",
        duration: "53 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "02",
        title: "Chapter One : The Vanishing of Will Byers",
        description: "On his way from a friend’s house, young Will sees something terrifying . Nearby, a sinister secret lurks in the depths of a government lab.",
        duration: "49 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "03",
        title: "Chapter Two: The Weirdo on Maple Street",
        description: "Lucas, Mike and Dustin try to talk to the girl they found in the woods. Hopper questions an anxious Joyce about an unsettling phone call.",
        duration: "56 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "04",
        title: "Chapter Three: Holly, Jolly",
        description: "An increasingly concerned Nancy looks for Barb and finds out what Jonathan`s been up to. Joyce is convinced Will is trying to talk to her.",
        duration: "52 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "05",
        title: "Chapter Four: The Body",
        description: "Refusing to believe Will is dead, Joyce tries to connect with her son. The boys give Eleven a makeover..",
        duration: "51 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      }
    ]
  },
  {
    title: "Season 03",
    subtitle: "7 Episodes",
    episodes: [
      {
        number: "01",
        title: "Chapter Three: Holly, Jolly",
        description: "An increasingly concerned Nancy looks for Barb and finds out what Jonathan`s been up to. Joyce is convinced Will is trying to talk to her.",
        duration: "52 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "02",
        title: "Chapter Four: The Body",
        description: "Refusing to believe Will is dead, Joyce tries to connect with her son. The boys give Eleven a makeover..",
        duration: "51 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "03",
        title: "Chapter Five: The Flea and the Acrobat",
        description: "Hopper breaks into the lab while Nancy and Jonathan confront the force that took Will. The boys ask Mr. Clarke how to travel to another dimension.",
        duration: "53 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "04",
        title: "Chapter One : The Vanishing of Will Byers",
        description: "On his way from a friend’s house, young Will sees something terrifying . Nearby, a sinister secret lurks in the depths of a government lab.",
        duration: "49 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "05",
        title: "Chapter Two: The Weirdo on Maple Street",
        description: "Lucas, Mike and Dustin try to talk to the girl they found in the woods. Hopper questions an anxious Joyce about an unsettling phone call.",
        duration: "56 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "06",
        title: "Chapter Three: Holly, Jolly",
        description: "An increasingly concerned Nancy looks for Barb and finds out what Jonathan`s been up to. Joyce is convinced Will is trying to talk to her.",
        duration: "52 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      },
      {
        number: "07",
        title: "Chapter Four: The Body",
        description: "Refusing to believe Will is dead, Joyce tries to connect with her son. The boys give Eleven a makeover..",
        duration: "51 min",
        video: {
          src: videoExampleSrc,
          poster: videoPosterSrc
        }
      }
    ]
  }
];
const EpisodeCard$1 = "";
const EpisodeCard = (props) => {
  const {
    number,
    title,
    description,
    duration,
    video
  } = props;
  const playButtonTitle = "Play video";
  return /* @__PURE__ */ jsxs("div", { className: "episode-card", children: [
    /* @__PURE__ */ jsx("div", { className: "episode-card__number", children: number }),
    /* @__PURE__ */ jsxs("div", { className: "episode-card__player", "data-js-video-player": "", children: [
      /* @__PURE__ */ jsx(
        "video",
        {
          className: "episode-card__video",
          src: video.src,
          poster: video.poster,
          width: 172,
          height: 118,
          "data-js-video-player-video": ""
        }
      ),
      /* @__PURE__ */ jsx(
        "button",
        {
          className: "episode-card__play-button is-active",
          type: "button",
          "aria-label": playButtonTitle,
          title: playButtonTitle,
          "data-js-video-player-play-button": "",
          children: /* @__PURE__ */ jsx(
            Icon,
            {
              className: "episode-card__play-button-icon",
              name: "play-circle"
            }
          )
        }
      )
    ] }),
    /* @__PURE__ */ jsxs("div", { className: "episode-card__body", children: [
      /* @__PURE__ */ jsxs("div", { className: "episode-card__info", children: [
        /* @__PURE__ */ jsx("h4", { className: "episode-card__title h6", children: title }),
        /* @__PURE__ */ jsxs("div", { className: "episode-card__duration", children: [
          /* @__PURE__ */ jsx(Icon, { name: "clock_stroke", ariaLabel: "Duration" }),
          /* @__PURE__ */ jsx("span", { children: duration })
        ] })
      ] }),
      /* @__PURE__ */ jsx("div", { className: "episode-card__description hidden-mobile", children: /* @__PURE__ */ jsx("p", { children: description }) })
    ] })
  ] });
};
const Seasons = () => {
  return /* @__PURE__ */ jsx(
    AccordionGroup,
    {
      className: "seasons",
      mode: "dark",
      isOrderedList: false,
      children: seasonItems.map(({ title, subtitle, episodes }, index2) => /* @__PURE__ */ jsx(
        Accordion,
        {
          title,
          titleLevelClassName: "h4",
          subtitle,
          id: `season-${index2}`,
          name: "seasons",
          isOpen: index2 === 0,
          isArrowButton: true,
          children: /* @__PURE__ */ jsx("ul", { className: "seasons__list", children: episodes.map((episode, index22) => /* @__PURE__ */ jsx("li", { className: "seasons__item", children: /* @__PURE__ */ jsx(EpisodeCard, { ...episode }) }, index22)) })
        },
        index2
      ))
    }
  );
};
const metadata$2 = {
  title: "Show - Stranger Things"
};
const show = () => {
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(ShowBanner, {}),
    /* @__PURE__ */ jsx(
      MovieDetails,
      {
        seasons: /* @__PURE__ */ jsx(Seasons, {})
      }
    )
  ] });
};
const __vite_glob_0_3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: show,
  metadata: metadata$2
}, Symbol.toStringTag, { value: "Module" }));
const PlansComparison$1 = "";
const Table$1 = "";
const Table = (props) => {
  const {
    className,
    headCells = [],
    rows = []
  } = props;
  return /* @__PURE__ */ jsxs("table", { className, children: [
    headCells.length > 0 && /* @__PURE__ */ jsx("thead", { children: /* @__PURE__ */ jsx("tr", { children: headCells.map(({ children, width }, index2) => /* @__PURE__ */ jsx("th", { width, children }, index2)) }) }),
    /* @__PURE__ */ jsx("tbody", { children: rows.map(({ cells }, index2) => /* @__PURE__ */ jsx("tr", { children: cells.map((cell, cellIndex) => /* @__PURE__ */ jsx("td", { children: cell }, cellIndex)) }, index2)) })
  ] });
};
const Specifications$1 = "";
const Specifications = (props) => {
  const {
    items = []
  } = props;
  return /* @__PURE__ */ jsx("div", { className: "specifications", children: /* @__PURE__ */ jsx("dl", { className: "specifications__list", children: items.map(({ key, value, isWide }, index2) => /* @__PURE__ */ jsxs(
    "div",
    {
      className: classNames("specifications__item", {
        "specifications__item--wide": isWide
      }),
      children: [
        /* @__PURE__ */ jsx("dt", { className: "specifications__key", children: key }),
        /* @__PURE__ */ jsx("dd", { className: "specifications__value", children: value })
      ]
    },
    index2
  )) }) });
};
const PlansComparison = () => {
  const headCells = [
    {
      children: "Features",
      width: "25%"
    },
    {
      children: "Basic",
      width: "25%",
      tabsTitle: "Basic"
    },
    {
      children: /* @__PURE__ */ jsxs(Fragment, { children: [
        "Standard ",
        /* @__PURE__ */ jsx(Badge, { mode: "accent", children: "Popular" })
      ] }),
      width: "25%",
      tabsTitle: "Standart"
    },
    {
      children: "Premium",
      width: "25%",
      tabsTitle: "Premium"
    }
  ];
  const rows = [
    {
      cells: [
        "Price",
        "$9.99/Month",
        "$12.99/Month",
        "$14.99/Month"
      ]
    },
    {
      cells: [
        "Content",
        "Access to a wide selection of movies and shows, including some new releases.",
        "Access to a wider selection of movies and shows, including most new releases and exclusive content",
        "Access to a widest selection of movies and shows, including all new releases and Offline Viewing"
      ],
      isWide: true
    },
    {
      cells: [
        "Devices",
        "Watch on one device simultaneously",
        "Watch on Two device simultaneously",
        "Watch on Four device simultaneously"
      ],
      isWide: true
    },
    {
      cells: [
        "Free Trail",
        "7 Days",
        "7 Days",
        "7 Days,"
      ]
    },
    {
      cells: [
        "Cancel Anytime",
        "Yes",
        "Yes",
        "Yes"
      ]
    },
    {
      cells: [
        "HDR",
        "No",
        "Yes",
        "Yes"
      ]
    },
    {
      cells: [
        "Dolby Atmos",
        "No",
        "Yes",
        "Yes"
      ]
    },
    {
      cells: [
        "Ad - Free",
        "No",
        "Yes",
        "Yes"
      ]
    },
    {
      cells: [
        "Offline Viewing",
        "No",
        "Yes, for select titles.",
        "Yes, for all titles."
      ]
    },
    {
      cells: [
        "Family Sharing",
        "No",
        "Yes, up to 5 family members.",
        "Yes, up to 6 family members."
      ]
    }
  ];
  const tabsItems = headCells.filter((headCell) => headCell.tabsTitle).map((headCell, headCellIndex) => ({
    title: headCell.tabsTitle,
    isActive: headCellIndex === 0,
    children: /* @__PURE__ */ jsx(
      Specifications,
      {
        items: rows.map(({ cells, isWide }) => ({
          key: cells[0],
          value: cells[headCellIndex + 1],
          isWide
        }))
      }
    )
  }));
  return /* @__PURE__ */ jsxs(
    Section,
    {
      title: "Compare our plans and find the right one for you",
      titleId: "plans-comparison-title",
      description: "StreamVibe offers three different plans to fit your needs: Basic, Standard, and Premium. Compare the features of each plan and choose the one that's right for you.",
      children: [
        /* @__PURE__ */ jsx(
          Table,
          {
            className: "hidden-mobile",
            headCells,
            rows
          }
        ),
        /* @__PURE__ */ jsx(
          Tabs,
          {
            className: "visible-mobile",
            title: "plans-comparison-tabs-title",
            items: tabsItems
          }
        )
      ]
    }
  );
};
const metadata$1 = {
  title: "Subscriptions"
};
const subscriptions = () => {
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(Plans, {}),
    /* @__PURE__ */ jsx(PlansComparison, {})
  ] });
};
const __vite_glob_0_4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: subscriptions,
  metadata: metadata$1
}, Symbol.toStringTag, { value: "Module" }));
const Support$1 = "";
const Field$1 = "";
const Field = (props) => {
  const {
    className,
    id = getIdFromTitle(props.label),
    label,
    /**
     * undefined (default) | 'email' | 'textarea'
     */
    type,
    placeholder,
    isRequired,
    inputMode,
    mask,
    renderBefore
  } = props;
  const Component = type === "textarea" ? "textarea" : "input";
  const fieldControlClassName = "field__control";
  const extraAttrs = {};
  if (mask) {
    extraAttrs["data-js-input-mask"] = mask;
  }
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: classNames(className, "field"),
      children: [
        /* @__PURE__ */ jsxs(
          "label",
          {
            className: "field__label",
            htmlFor: id,
            children: [
              label,
              " ",
              isRequired && /* @__PURE__ */ jsx(
                "span",
                {
                  className: "field__required-star",
                  "aria-hidden": "true",
                  children: "*"
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ jsxs("div", { className: "field__body", children: [
          renderBefore == null ? void 0 : renderBefore(fieldControlClassName),
          /* @__PURE__ */ jsx(
            Component,
            {
              className: fieldControlClassName,
              id,
              type,
              placeholder,
              required: isRequired,
              inputMode,
              ...extraAttrs
            }
          )
        ] })
      ]
    }
  );
};
const Checkbox$1 = "";
const Checkbox = (props) => {
  const {
    className,
    id = getIdFromTitle(props.label),
    label,
    isRequired
  } = props;
  return /* @__PURE__ */ jsxs(
    "label",
    {
      className: classNames(className, "checkbox"),
      htmlFor: id,
      children: [
        /* @__PURE__ */ jsx(
          "input",
          {
            className: "checkbox__input",
            id,
            type: "checkbox",
            required: isRequired
          }
        ),
        /* @__PURE__ */ jsx("span", { className: "checkbox__label", children: label })
      ]
    }
  );
};
const Select$1 = "";
const Select = (props) => {
  const {
    id = getIdFromTitle(props.label),
    label,
    isLabelHidden = true,
    /**
     * Array<{
     *   value: string
     *   isSelected?: boolean
     * }>
     */
    options = [],
    buttonClassName
  } = props;
  const IDs = {
    originalControl: id,
    label: `${id}-label`,
    dropdown: `${id}-dropdown`
  };
  const selectedOption = options.find(({ isSelected }) => isSelected) ?? options[0];
  return /* @__PURE__ */ jsxs("div", { className: "select", "data-js-select": "", children: [
    /* @__PURE__ */ jsx(
      "label",
      {
        className: classNames("select__label", {
          "visually-hidden": isLabelHidden
        }),
        id: IDs.label,
        htmlFor: IDs.originalControl,
        children: label
      }
    ),
    /* @__PURE__ */ jsx(
      "select",
      {
        className: classNames("select__original-control", buttonClassName),
        id: IDs.originalControl,
        tabIndex: -1,
        defaultValue: selectedOption.value,
        "data-js-select-original-control": "",
        children: options.map(({ value }, index2) => /* @__PURE__ */ jsx("option", { value, children: value }, index2))
      }
    ),
    /* @__PURE__ */ jsxs("div", { className: "select__body", children: [
      /* @__PURE__ */ jsx(
        "div",
        {
          className: classNames("select__button", buttonClassName),
          role: "combobox",
          "aria-expanded": false,
          "aria-haspopup": "listbox",
          "aria-controls": IDs.dropdown,
          "aria-labelledby": IDs.label,
          tabIndex: 0,
          "data-js-select-button": "",
          children: selectedOption.value
        }
      ),
      /* @__PURE__ */ jsx(
        "div",
        {
          className: "select__dropdown",
          id: IDs.dropdown,
          role: "listbox",
          "aria-labelledby": IDs.label,
          "data-js-select-dropdown": "",
          children: options.map((option, index2) => {
            const {
              value,
              isSelected = false
            } = option;
            return /* @__PURE__ */ jsx(
              "div",
              {
                className: classNames("select__option", {
                  "is-selected": isSelected,
                  "is-current": isSelected
                }),
                id: `${id}-option-${index2}`,
                role: "option",
                "aria-selected": isSelected,
                "data-js-select-option": "",
                children: value
              },
              index2
            );
          })
        }
      )
    ] })
  ] });
};
const Support = () => {
  const titleId = "support-title";
  return /* @__PURE__ */ jsxs(
    "section",
    {
      className: "support container",
      "aria-labelledby": titleId,
      children: [
        /* @__PURE__ */ jsxs("div", { className: "support__body", children: [
          /* @__PURE__ */ jsxs("div", { className: "support__info", children: [
            /* @__PURE__ */ jsx("h1", { className: "support__title h2", id: titleId, children: "Welcome to our support page!" }),
            /* @__PURE__ */ jsx("div", { className: "support__description", children: /* @__PURE__ */ jsx("p", { children: "We're here to help you with any problems you may be having with our product." }) })
          ] }),
          /* @__PURE__ */ jsx(
            Image,
            {
              className: "support__image",
              src: "/src/assets/images/support/1.png"
            }
          )
        ] }),
        /* @__PURE__ */ jsxs("form", { className: "support__form", action: "", children: [
          /* @__PURE__ */ jsx(
            Field,
            {
              className: "support__form-cell",
              label: "First Name",
              placeholder: "Ivan",
              isRequired: true
            }
          ),
          /* @__PURE__ */ jsx(
            Field,
            {
              className: "support__form-cell",
              label: "Last Name",
              placeholder: "Ivanov"
            }
          ),
          /* @__PURE__ */ jsx(
            Field,
            {
              className: "support__form-cell",
              label: "Email",
              type: "email",
              placeholder: "example@example.com",
              isRequired: true
            }
          ),
          /* @__PURE__ */ jsx(
            Field,
            {
              className: "support__form-cell",
              label: "Phone Number",
              placeholder: "(999) 999-99-99",
              inputMode: "tel",
              mask: "(000) 000-00-00",
              renderBefore: (fieldControlClassName) => /* @__PURE__ */ jsx(
                Select,
                {
                  label: "Phone number prefix",
                  buttonClassName: fieldControlClassName,
                  options: [
                    { value: "+7", isSelected: true },
                    { value: "+1" },
                    { value: "+2" },
                    { value: "+3" }
                  ]
                }
              )
            }
          ),
          /* @__PURE__ */ jsx(
            Field,
            {
              className: "support__form-cell support__form-cell--wide",
              label: "Message",
              type: "textarea",
              placeholder: "Hi! I have a question...",
              isRequired: true
            }
          ),
          /* @__PURE__ */ jsxs("div", { className: "support__form-cell support__form-cell--wide support__form-cell--actions", children: [
            /* @__PURE__ */ jsx(
              Checkbox,
              {
                className: "support__form-agreement",
                label: "I agree with Terms of Use and Privacy Policy",
                isRequired: true
              }
            ),
            /* @__PURE__ */ jsx(
              Button,
              {
                className: "support__form-submit-button",
                label: "Send Message",
                type: "submit"
              }
            )
          ] })
        ] })
      ]
    }
  );
};
const metadata = {
  title: "Support"
};
const support = () => {
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(Support, {}),
    /* @__PURE__ */ jsx(Questions, {})
  ] });
};
const __vite_glob_0_5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: support,
  metadata
}, Symbol.toStringTag, { value: "Module" }));
function getPages() {
  const PAGES = /* @__PURE__ */ Object.assign({
    "/src/pages/index.jsx": __vite_glob_0_0,
    "/src/pages/movie.jsx": __vite_glob_0_1,
    "/src/pages/movies.jsx": __vite_glob_0_2,
    "/src/pages/show.jsx": __vite_glob_0_3,
    "/src/pages/subscriptions.jsx": __vite_glob_0_4,
    "/src/pages/support.jsx": __vite_glob_0_5
  });
  const pages = Object.keys(PAGES).map((page) => {
    const pagePath = page.replace(/^\/src\/pages\//g, "/").replace(/\index(\.tsx|\.jsx|\.mdx|\.md)$/g, "").replace(/\.tsx$|\.jsx$|\.mdx$|\.md$/g, "").replace(/\[(\.{3}.+?)\]/g, "*").replace(/\[(.+?)\]/g, ":$1").replace(/^.\//, "/");
    const frontmatter = PAGES[page].frontmatter || {};
    const metadata2 = {
      ...frontmatter,
      ...PAGES[page].metadata || {}
    };
    return {
      path: pagePath,
      component: PAGES[page].default,
      getStaticData: PAGES[page].getStaticData,
      metadata: metadata2,
      frontmatter
    };
  });
  return pages;
}
async function resolvePages(pages) {
  const resolvedPages = await Promise.all(
    pages.map(async (page) => {
      const defaultStaticData = { props: {}, paths: {} };
      const staticData = page.getStaticData ? await page.getStaticData() : void 0;
      if (!staticData) {
        return {
          path: page.path,
          component: page.component,
          staticData: defaultStaticData,
          metadata: page.metadata,
          frontmatter: page.frontmatter
        };
      }
      if ("props" in staticData && "paths" in staticData === false) {
        const mergedStaticData = { ...defaultStaticData, ...staticData };
        return {
          path: page.path,
          component: page.component,
          staticData: mergedStaticData,
          metadata: page.metadata,
          frontmatter: page.frontmatter
        };
      }
      if ("paths" in staticData) {
        const mergedStaticData = { ...defaultStaticData, ...staticData };
        let fixedPath = page.path;
        for await (const [key, value] of Object.entries(
          mergedStaticData.paths
        )) {
          const reg = new RegExp(":" + key, "g");
          fixedPath = fixedPath.replace(reg, `${value}`);
        }
        return {
          path: fixedPath,
          component: page.component,
          staticData: mergedStaticData,
          metadata: page.metadata,
          frontmatter: page.frontmatter
        };
      }
      if (Array.isArray(staticData) && staticData.length > 0) {
        const entryPoints = staticData;
        return await Promise.all(
          entryPoints.map(async (entryPoint) => {
            const mergedStaticData = { ...defaultStaticData, ...entryPoint };
            let fixedPath = page.path;
            for await (const [key, value] of Object.entries(
              mergedStaticData.paths
            )) {
              const reg = new RegExp(":" + key, "g");
              fixedPath = fixedPath.replace(reg, `${value}`);
            }
            return {
              path: fixedPath,
              component: page.component,
              staticData: mergedStaticData,
              metadata: page.metadata,
              frontmatter: page.frontmatter
            };
          })
        );
      }
      return {
        path: page.path,
        component: page.component,
        staticData: defaultStaticData,
        metadata: page.metadata,
        frontmatter: page.frontmatter
      };
    })
  );
  return resolvedPages.flat();
}
function getStories(config) {
  if (!config.main.storyapp.useImport) {
    return { storyPages: [], storyItems: [] };
  }
  const JS_STORIES = /* @__PURE__ */ Object.assign({});
  const MDX_STORIES = /* @__PURE__ */ Object.assign({});
  const jsStories = Object.keys(JS_STORIES).map((storyFileKey) => {
    const storyFile = JS_STORIES[storyFileKey];
    const storyMeta = storyFile.default;
    if (!(storyMeta == null ? void 0 : storyMeta.id) && !(storyMeta == null ? void 0 : storyMeta.title)) {
      return [];
    }
    const storyBase = "/" + config.main.storyapp.outDir;
    const storyId = (storyMeta.id || storyMeta.title).split("/").map((id) => id.trim().toLowerCase()).join("/");
    const storyTitle = storyMeta.title.split("/").map((title) => title.trim()).join(" / ");
    const storyList = Object.keys(storyFile).filter((key) => !["default", "metadata", "frontmatter"].includes(key)).map((key) => ({ storyKey: key, storyObj: storyFile[key] }));
    return storyList.map((item) => {
      const currentObj = item.storyObj;
      const currentId = item.storyKey.toLowerCase();
      const currentTitle = currentObj.name || item.storyKey;
      const pagePath = [storyBase, storyId, currentId].join("/");
      const title = [storyTitle, currentTitle].join(" / ");
      const draft = currentObj.draft || storyMeta.draft || false;
      const hidden = currentObj.hidden || storyMeta.hidden || false;
      const component = storyMeta.component;
      const args = {
        ...storyMeta.args || {},
        ...currentObj.args || {}
      };
      const parameters = {
        ...storyMeta.parameters || {},
        ...currentObj.parameters || {}
      };
      const decorators = [
        ...storyMeta.decorators || [],
        ...currentObj.decorators || []
      ].flat();
      return {
        path: pagePath,
        title,
        draft,
        hidden,
        component,
        args,
        parameters,
        decorators,
        metadata: { ...{}, ...storyFile.metadata || {} },
        frontmatter: { ...{}, ...storyFile.frontmatter || {} }
      };
    });
  });
  const mdxStories = Object.keys(MDX_STORIES).map((storyFileKey) => {
    const storyFile = MDX_STORIES[storyFileKey];
    const storyMeta = {
      ...storyFile.frontmatter || {},
      ...storyFile.metadata || {}
    };
    const storyBase = "/" + config.main.storyapp.outDir;
    const storyId = (storyMeta.id || storyMeta.title || "").split("/").map((id) => id.trim().toLowerCase()).join("/");
    const storyTitle = (storyMeta.title || "").split("/").map((title2) => title2.trim()).join(" / ");
    if (!storyId || !storyTitle) {
      return [];
    }
    const pagePath = [storyBase, storyId].join("/");
    const title = [storyTitle].join(" / ");
    const draft = storyMeta.draft || false;
    const hidden = storyMeta.hidden || false;
    const component = storyFile.default;
    const args = { ...storyMeta.args || {} };
    const parameters = {
      ...storyMeta.parameters || {}
    };
    const decorators = [
      ...storyMeta.decorators || []
    ].flat();
    return [
      {
        path: pagePath,
        title,
        draft,
        hidden,
        component,
        args,
        parameters,
        decorators,
        metadata: { ...{}, ...storyFile.metadata || {} },
        frontmatter: { ...{}, ...storyFile.frontmatter || {} }
      }
    ];
  });
  const mergesStories = [...jsStories, ...mdxStories].flat().filter((item) => Object.keys(item).length !== 0);
  const uniqueStories = Object.values(
    Object.fromEntries(mergesStories.map((item) => [item.path, item]))
  );
  if (!uniqueStories.length) {
    return { storyPages: [], storyItems: [] };
  }
  const storyPages = uniqueStories.map((item) => {
    const baseComponent = () => createElement(item.component, item.args);
    const decoratedComponent = item.decorators.length > 0 ? item.decorators.reduceRight((accumulator, currentValue) => {
      const result = accumulator;
      return () => currentValue(result);
    }, baseComponent) : baseComponent;
    const metadata2 = {
      title: item.title,
      draft: item.draft,
      ...item.metadata,
      ...item.frontmatter
    };
    return {
      path: item.path,
      component: decoratedComponent,
      getStaticData: void 0,
      metadata: metadata2,
      frontmatter: item.frontmatter
    };
  });
  return { storyPages, storyItems: [] };
}
async function getSources(config) {
  const global2 = getGlobal();
  const pages = getPages();
  const { storyPages, storyItems } = getStories(config);
  const resolvedGlobal = await resolveGlobal(global2);
  const resolvedPages = await resolvePages([...pages, ...storyPages]);
  return {
    resolvedGlobal,
    resolvedPages
  };
}
function Wrap({
  component,
  props,
  children
}) {
  const WrapComponent = component;
  return /* @__PURE__ */ jsx(Fragment, { children: WrapComponent ? /* @__PURE__ */ jsx(WrapComponent, { ...props, children }) : /* @__PURE__ */ jsx(Fragment, { children }) });
}
function Page({
  resolvedGlobal,
  resolvedPages
}) {
  const global2 = resolvedGlobal;
  const routes = resolvedPages;
  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx(Routes, { children: routes.map((page) => {
    const WrapComponent = Wrap;
    const PageComponent = page.component;
    const props = {
      title: "",
      group: "",
      draft: false,
      ...global2.metadata,
      ...page.metadata,
      ...global2.staticData.props,
      ...page.staticData.props,
      url: page.path,
      location: { pathname: page.path },
      frontmatter: page.frontmatter
    };
    return /* @__PURE__ */ jsx(
      Route,
      {
        path: page.path,
        element: /* @__PURE__ */ jsx(WrapComponent, { component: global2.component, props, children: /* @__PURE__ */ jsx(PageComponent, { ...props }) })
      },
      page.path
    );
  }) }) });
}
function transformPage({
  url,
  resolvedGlobal,
  resolvedPages,
  headTags,
  startTags,
  endTags
}) {
  const helmetContext = {};
  let markup = renderToString(
    /* @__PURE__ */ jsx(StaticRouter, { location: url, children: /* @__PURE__ */ jsx(HelmetProvider, { context: helmetContext, children: /* @__PURE__ */ jsx(Page, { resolvedGlobal, resolvedPages }) }) })
  );
  markup = markup.replace(new RegExp("(?<=\\<[img|source].+?)(srcSet=)", "g"), "srcset=");
  const { helmet } = helmetContext;
  let htmlAttributes = ` lang="ja" ${helmet.htmlAttributes.toString()}`;
  let bodyAttributes = "";
  if (Object.hasOwn(helmet.htmlAttributes.toComponent(), "lang")) {
    htmlAttributes = " " + helmet.htmlAttributes.toString();
  }
  if (helmet.bodyAttributes) {
    bodyAttributes = " " + helmet.bodyAttributes.toString();
  }
  const metaAll = helmet.meta.toString();
  const metaCharsetDefault = `<meta charset="UTF-8" />`;
  const metaCharsetReg = /<meta[^<>]*?charset=.*?\/>/gi;
  const metaCharsetArray = metaAll.match(metaCharsetReg) || [""];
  const metaViewportDefault = `<meta name="viewport" content="width=device-width, initial-scale=1.0" />`;
  const metaViewportReg = /<meta[^<>]*?name="viewport".*?\/>/gi;
  const metaViewportArray = metaAll.match(metaViewportReg) || [""];
  let metaCharset;
  metaCharset = metaCharsetArray.at(-1) || "";
  metaCharset = metaCharset || metaCharsetDefault;
  let metaViewport;
  metaViewport = metaViewportArray.at(-1) || "";
  metaViewport = metaViewport || metaViewportDefault;
  let metaOther;
  metaOther = metaAll || "";
  metaOther = metaOther.replace(metaCharsetReg, "").replace(metaViewportReg, "");
  const insertHeadTags = headTags ? headTags : "";
  const insertStartTags = startTags ? `${startTags}
` : "";
  const insertEndTags = endTags ? `
${endTags}` : "";
  function staticHelmet(data) {
    return data.replace(/\sdata-rh="true"/g, "");
  }
  return `<!doctype html>
<html${htmlAttributes}>
  <head>
    ${staticHelmet(metaCharset)}
    ${staticHelmet(metaViewport)}
    ${staticHelmet(helmet.title.toString())}
    ${staticHelmet(metaOther)}
    ${staticHelmet(helmet.link.toString())}
    ${staticHelmet(helmet.script.toString())}
    ${insertHeadTags}
    ${staticHelmet(helmet.style.toString())}
  </head>
  <body${bodyAttributes}>
    ${insertStartTags}${markup}${insertEndTags}
  </body>
</html>`;
}
const flags = {
  entried: "data-minista-flag-entried",
  bundle: "data-minista-flag-bundle",
  hydrate: "data-minista-flag-hydrate",
  relative: "data-minista-flag-relative"
};
function getLinkTag({
  command,
  name,
  input,
  attributes,
  config
}) {
  const { resolvedBase } = config.sub;
  const { assets } = config.main;
  let assetPath = "";
  let attrs = "";
  attrs = attributes ? " " + attributes : "";
  if (command === "serve") {
    assetPath = path.join("/", "@minista-project-root", input);
    return `<link rel="stylesheet"${attrs} href="${assetPath}">`;
  }
  assetPath = `${resolvedBase}${assets.outDir}/${name}.css`;
  assetPath = assetPath.replace(/-ministaDuplicateName\d*/, "");
  return `<link rel="stylesheet"${attrs} href="${assetPath}" ${flags.entried}>`;
}
function getScriptTag({
  command,
  name,
  input,
  attributes,
  config
}) {
  const { resolvedBase } = config.sub;
  const { assets } = config.main;
  let assetPath = "";
  let attrs = "";
  attrs = attributes ? " " + attributes : ` type="module"`;
  attrs = attributes === false ? "" : attrs;
  if (command === "serve") {
    assetPath = `/@minista-project-root/${input}`;
    return `<script${attrs} src="${assetPath}"><\/script>`;
  }
  assetPath = `${resolvedBase}${assets.outDir}/${name}.js`;
  assetPath = assetPath.replace(/-ministaDuplicateName\d*/, "");
  return `<script${attrs} src="${assetPath}" ${flags.entried}><\/script>`;
}
function transformTags({
  command,
  pathname,
  config
}) {
  const { resolvedBase } = config.sub;
  const { assets } = config.main;
  function scriptFilter(entries, isScript) {
    const regex = /\.(js|cjs|mjs|jsx|ts|tsx)$/;
    if (isScript) {
      return entries.filter((entry) => entry.input.match(regex));
    } else {
      return entries.filter((entry) => !entry.input.match(regex));
    }
  }
  function createTags(entries) {
    let linkTags = [];
    let scriptTags = [];
    const linkEntries = scriptFilter(entries, false);
    const scriptEntries = scriptFilter(entries, true);
    if (linkEntries.length > 0) {
      linkTags = linkEntries.map((entry) => {
        return getLinkTag({
          command,
          name: entry.name,
          input: entry.input,
          attributes: entry.attributes,
          config
        });
      });
    }
    if (scriptEntries.length > 0) {
      scriptTags = scriptEntries.map((entry) => {
        return getScriptTag({
          command,
          name: entry.name,
          input: entry.input,
          attributes: entry.attributes,
          config
        });
      });
    }
    return { linkTags, scriptTags };
  }
  let headTags = "";
  let startTags = "";
  let endTags = "";
  let headLinkTags = [];
  let headScriptTags = [];
  let startLinkTags = [];
  let startScriptTags = [];
  let endLinkTags = [];
  let endScriptTags = [];
  let bundleHeadLinkTag = "";
  let bundleHeadScriptTag = "";
  let hydrateHeadScriptTag = "";
  if (command === "serve") {
    const bundlePath = "/@minista/dist/server/bundle.js";
    const hydratePath = "/@minista/dist/server/hydrate.js";
    bundleHeadScriptTag = `<script type="module" src="${bundlePath}"><\/script>`;
    hydrateHeadScriptTag = `<script type="module" src="${hydratePath}"><\/script>`;
  }
  if (command === "build") {
    const bundlePath = `${resolvedBase}${assets.outDir}/${assets.bundle.outName}.css`;
    const hydratePath = `${resolvedBase}${assets.outDir}/${assets.partial.outName}.js`;
    bundleHeadLinkTag = `<link rel="stylesheet" href="${bundlePath}" ${flags.entried} ${flags.bundle}>`;
    hydrateHeadScriptTag = `<script type="module" src="${hydratePath}" ${flags.entried} ${flags.hydrate}><\/script>`;
  }
  const pageEntries = config.sub.resolvedEntry.filter((entry) => {
    return picomatch.isMatch(pathname, entry.insertPages.include, {
      ignore: entry.insertPages.exclude
    });
  });
  const headEntries = pageEntries.filter((entry) => entry.position === "head");
  const startEntries = pageEntries.filter((entry) => entry.position === "start");
  const endEntries = pageEntries.filter((entry) => entry.position === "end");
  if (headEntries.length > 0) {
    const { linkTags, scriptTags } = createTags(headEntries);
    headLinkTags = linkTags;
    headScriptTags = scriptTags;
  }
  if (startEntries.length > 0) {
    const { linkTags, scriptTags } = createTags(startEntries);
    startLinkTags = linkTags;
    startScriptTags = scriptTags;
  }
  if (endEntries.length > 0 || command === "serve") {
    const { linkTags, scriptTags } = createTags(endEntries);
    endLinkTags = linkTags;
    endScriptTags = scriptTags;
  }
  headTags = [
    ...headLinkTags,
    bundleHeadLinkTag,
    ...headScriptTags,
    bundleHeadScriptTag,
    hydrateHeadScriptTag
  ].filter((tag) => tag).join("\n");
  startTags = [...startLinkTags, ...startScriptTags].filter((tag) => tag).join("\n");
  endTags = [...endLinkTags, ...endScriptTags].filter((tag) => tag).join("\n");
  return {
    headTags,
    startTags,
    endTags
  };
}
function getElements(parsedData, selector) {
  if (Array.isArray(parsedData)) {
    return parsedData.map((data) => data.querySelectorAll(selector)).flat();
  } else {
    return parsedData.querySelectorAll(selector);
  }
}
function transformOneComment(text) {
  return "<!-- " + text + " -->";
}
function transformMultiComment(text) {
  let multiText = text;
  let spaceArray = [];
  let spaceNums = [];
  let spaceMax = 0;
  let startSpace = "";
  let endSpace = "";
  multiText = multiText.replace(/^(\n| )*/, "").replace(/(\n| )*$/, "");
  spaceArray = multiText.match(/[\n] */g) || [];
  spaceArray = spaceArray.map((item) => item.replace(/\n/, ""));
  spaceNums = spaceArray.map((item) => item.length);
  spaceMax = spaceNums.reduce(function(a, b) {
    return Math.max(a, b);
  });
  spaceMax = spaceMax - 2 <= 2 ? 2 : spaceMax - 2;
  startSpace = " ".repeat(spaceMax);
  endSpace = spaceMax === 2 ? "" : " ".repeat(spaceMax - 2);
  multiText = multiText.replace(/[\n] */g, "\n" + startSpace);
  return "<!--\n" + startSpace + multiText + "\n" + endSpace + "-->";
}
function transformComments(parsedData) {
  const targetAttr = `[data-minista-transform-target="comment"]`;
  const targetEls = getElements(parsedData, targetAttr);
  if (!targetEls.length) {
    return;
  }
  targetEls.map((el) => {
    let commentTag = "";
    const parent = el.parentNode;
    const text = el.innerText;
    if (!text.includes("\n")) {
      commentTag = transformOneComment(text);
    } else {
      commentTag = transformMultiComment(text);
    }
    const content = "\n\n" + commentTag + "\n\n";
    const parsedContent = parse(content, { comment: true });
    parent.exchangeChild(el, parsedContent);
    return;
  });
}
function getHtmlPath(pathname) {
  let fileName = pathname.endsWith("/") ? path.join(pathname, "index.html") : pathname + ".html";
  fileName = fileName.replace(/^\//, "");
  return fileName;
}
async function transformSsg({
  command,
  resolvedGlobal,
  resolvedPages,
  config
}) {
  const { resolvedBase } = config.sub;
  let pages = resolvedPages.map((page) => {
    const basedPath = resolvedBase.match(/^\/.*\/$/) ? path.join(resolvedBase, page.path) : page.path;
    const { headTags, startTags, endTags } = transformTags({
      command: "build",
      pathname: basedPath,
      config
    });
    const group = page.metadata.group || "";
    const title = page.metadata.title || "";
    const draft = page.metadata.draft || false;
    return {
      path: page.path,
      basedPath,
      group,
      title,
      draft,
      html: command === "build" && draft ? "" : transformPage({
        url: page.path,
        resolvedGlobal,
        resolvedPages: [page],
        headTags,
        startTags,
        endTags
      })
    };
  });
  pages = pages.filter((page) => page.html);
  if (pages.length === 0) {
    return [];
  }
  pages = pages.map((page) => {
    let html = page.html;
    let parsedHtml = parse(html, { comment: true });
    transformComments(parsedHtml);
    html = parsedHtml.toString();
    return {
      path: page.path,
      basedPath: page.basedPath,
      group: page.group,
      title: page.title,
      draft: page.draft,
      html
    };
  });
  return pages.map((page) => {
    const fileName = getHtmlPath(page.path);
    return {
      fileName,
      path: page.basedPath,
      group: page.group,
      title: page.title,
      draft: page.draft,
      html: page.html
    };
  });
}
async function runSsg(config) {
  const { resolvedGlobal, resolvedPages } = await getSources(config);
  if (!resolvedPages.length) {
    return [];
  }
  return await transformSsg({
    command: "build",
    resolvedGlobal,
    resolvedPages,
    config
  });
}
export {
  runSsg
};
