import type { Plugin } from "unified";
import type { Options as RemarkParseOptions } from "remark-parse";
import type { Options as RemarkGfmOptions } from "remark-gfm";
import type { Options as RemarkRehypeOptions } from "remark-rehype";
import type { Options as RehypeHighlightOptions } from "rehype-highlight";
import type { Options as RehypeRawOptions } from "rehype-raw";
import type { Options as RehypeReactOptions } from "rehype-react";
type MarkdownProps = {
    content?: string;
    children?: string;
    components?: RehypeReactOptions["components"];
    useRemarkGfm?: boolean;
    useRehypeHighlight?: boolean;
    remarkPlugins?: Plugin[];
    rehypePlugins?: Plugin[];
    remarkParseOptions?: RemarkParseOptions;
    remarkGfmOptions?: RemarkGfmOptions;
    remarkRehypeOptions?: RemarkRehypeOptions;
    rehypeHighlightOptions?: RehypeHighlightOptions;
    rehypeRawOptions?: RehypeRawOptions;
    rehypeReactOptions?: RehypeReactOptions;
};
export declare function Markdown({ content, children, components, useRemarkGfm, useRehypeHighlight, remarkPlugins, rehypePlugins, remarkParseOptions, remarkGfmOptions, remarkRehypeOptions, rehypeHighlightOptions, rehypeRawOptions, rehypeReactOptions, }: MarkdownProps): import("react/jsx-runtime").JSX.Element;
export {};
