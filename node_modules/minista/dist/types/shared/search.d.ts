type SearchResult = {
    path: string;
    content: string;
};
type SearchProps = {
    placeholder?: string;
    minHitLength?: number;
    maxHitPages?: number;
    maxHitWords?: number;
    searchFieldClassName?: string;
    searchFieldInsertBeforeElement?: React.ReactElement;
    searchFieldInsertAfterElement?: React.ReactElement;
    searchListClassName?: string;
    attributes?: React.HTMLAttributes<HTMLElement>;
} & React.HTMLAttributes<HTMLElement>;
type SearchFieldProps = {
    placeholder?: string;
    minHitLength?: number;
    maxHitPages?: number;
    maxHitWords?: number;
    insertBeforeElement?: React.ReactElement;
    insertAfterElement?: React.ReactElement;
    setSearchValues?: React.Dispatch<React.SetStateAction<string[]>>;
    setSearchHitValues?: React.Dispatch<React.SetStateAction<string[]>>;
    setSearchResults?: React.Dispatch<React.SetStateAction<SearchResult[]>>;
    attributes?: React.HTMLAttributes<HTMLElement>;
} & React.HTMLAttributes<HTMLElement>;
type SearchListProps = {
    searchValues?: string[];
    searchHitValues?: string[];
    searchResults?: SearchResult[];
    attributes?: React.HTMLAttributes<HTMLElement>;
} & React.HTMLAttributes<HTMLElement>;
export declare function Search(props: SearchProps): import("react/jsx-runtime").JSX.Element;
export declare function SearchField(props: SearchFieldProps): import("react/jsx-runtime").JSX.Element;
export declare function SearchList(props: SearchListProps): import("react/jsx-runtime").JSX.Element;
export {};
