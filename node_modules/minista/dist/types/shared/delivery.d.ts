type ContainerProps = {
    children?: React.ReactNode;
};
type StylesProps = {
    defaultDark?: boolean;
    darkMode?: boolean;
    innerMaxWidth?: string;
    defaultLightStyle?: string;
    defaultDarkStyle?: string;
    schemeDarkStyle?: string;
    variableStyle?: string;
    resetStyle?: string;
    componentStyle?: string;
};
type HeaderProps = {
    title?: string;
    dateName?: string;
    date?: string;
    buttons?: Button[];
};
type Button = {
    title?: string;
    path?: string;
    color?: string;
};
type MainProps = {
    children?: React.ReactNode;
};
type NavProps = {
    title?: string;
    children?: React.ReactNode;
};
type ListProps = {
    items?: Item[];
};
type Item = {
    title?: string;
    path?: string;
    items?: Item[];
};
export declare function Delivery({ title, bodyClass, dateFormat, timezone, styles, header, items, }: {
    title?: string;
    bodyClass?: string;
    dateFormat?: string;
    timezone?: string;
    styles?: StylesProps;
    header?: HeaderProps;
    items?: Item[];
}): import("react/jsx-runtime").JSX.Element;
export declare function DeliveryContainer({ children }: ContainerProps): import("react/jsx-runtime").JSX.Element;
export declare function DeliveryStyles({ defaultDark, darkMode, innerMaxWidth, defaultLightStyle, defaultDarkStyle, schemeDarkStyle, variableStyle, resetStyle, componentStyle, }: StylesProps): import("react/jsx-runtime").JSX.Element;
export declare function DeliveryHeader({ title, dateName, date, buttons, }: HeaderProps): import("react/jsx-runtime").JSX.Element;
export declare function DeliveryMain({ children }: MainProps): import("react/jsx-runtime").JSX.Element;
export declare function DeliveryNav({ title, children }: NavProps): import("react/jsx-runtime").JSX.Element;
export declare function DeliveryList({ items }: ListProps): import("react/jsx-runtime").JSX.Element;
export {};
