export type EntryPatterns = string | string[] | {
    [key: string]: string;
} | EntryObject[];
type EntryObject = {
    name?: string;
    input: string;
    insertPages: string | string[] | {
        include: string[];
        exclude?: string[];
    };
    position?: "head" | "start" | "end";
    attributes?: string | false;
};
export type ResolvedViteEntry = {
    [key: string]: string;
};
export type ResolvedEntry = ResolvedEntryObject[];
type ResolvedEntryObject = {
    name: string;
    input: string;
    insertPages: {
        include: string[];
        exclude?: string[];
    };
    position: "head" | "start" | "end";
    attributes: string | false;
};
export declare function resolveEntryInclude(input: EntryObject["insertPages"]): string[];
export declare function resolveEntryExclude(input: EntryObject["insertPages"]): string[];
export declare function resolveViteEntry(root: string, entry: ResolvedEntry): ResolvedViteEntry;
export declare function resolveEntry(entry: EntryPatterns): Promise<ResolvedEntry>;
export {};
