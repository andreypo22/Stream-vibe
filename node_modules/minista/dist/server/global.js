function getGlobal() {
  const GLOBALS = import.meta.glob(
    [
      "/src/pages/_global.{tsx,jsx}",
      "/src/_global.{tsx,jsx}",
      "/src/global.{tsx,jsx}",
      "/src/root.{tsx,jsx}"
    ],
    {
      eager: true
    }
  );
  const globals = Object.keys(GLOBALS).length === 0 ? [{}] : Object.keys(GLOBALS).map((global2) => {
    return {
      component: GLOBALS[global2].default || void 0,
      getStaticData: GLOBALS[global2].getStaticData || void 0,
      metadata: GLOBALS[global2].metadata || {}
    };
  });
  const global = globals[0];
  return global;
}
async function resolveGlobal(global) {
  let staticData = global.getStaticData ? await global.getStaticData() : { props: {} };
  if (Array.isArray(staticData)) {
    staticData = staticData[0];
  }
  const resolvedGlobal = {
    component: global.component || void 0,
    staticData,
    metadata: { ...global.metadata || {} }
  };
  return resolvedGlobal;
}
export {
  getGlobal,
  resolveGlobal
};
